{"version":3,"sources":["webpack://asc/webpack/universalModuleDefinition","webpack://asc/./asc.js","webpack://asc/./shim/fs.js","webpack://asc/./shim/path.js","webpack://asc/./shim/process.js","webpack://asc/./util/colors.js","webpack://asc/./util/find.js","webpack://asc/./util/mkdirp.js","webpack://asc/./util/options.js","webpack://asc/./util/utf8.js","webpack://asc/../lib/loader/umd/index.js","webpack://asc/../lib/rtrace/umd/index.js","webpack://asc/external \"assemblyscript\"","webpack://asc/external \"binaryen\"","webpack://asc/webpack/bootstrap","webpack://asc/webpack/startup","webpack://asc/webpack/runtime/global"],"names":["root","factory","exports","module","require","e","define","amd","self","this","__WEBPACK_EXTERNAL_MODULE__911__","__WEBPACK_EXTERNAL_MODULE__525__","fs","path","process","exit","code","console","log","Error","toString","stack","utf8","colorsUtil","optionsUtil","mkdirp","find","binaryen","g","dynrequire","WIN","platform","EOL","SEP","setupExtension","ext","startsWith","ext_d","re","RegExp","re_d","re_except_d","re_index","defaultExtension","__wrap","ptrOrObj","wrapperClass","wrap","assemblyscript","__newString","__getString","__pin","__unpin","__collect","Object","defineProperty","get","ready","removeAllListeners","wasmArg","argv","findIndex","arg","binaryPath","splice","loader","rtrace","err","info","getMemory","memory","gcProfile","length","writeFileSync","timestamp","Date","now","JSON","stringify","join","instantiateSync","readFileSync","install","_start","loadAssemblyScriptWasm","register","project","skipIgnore","compilerOptions","target","e_ts","loadAssemblyScriptJS","str","ptr","incremental","loadAssemblyScript","isBundle","version","options","libraryPrefix","LIBRARY_PREFIX","valueOf","defaultOptimizeLevel","defaultShrinkLevel","libraryFiles","libDir","bundled","files","forEach","file","replace","definitionFiles","readDefinition","name","assembly","portable","compileString","sources","output","create","stdout","createMemoryStream","stderr","keys","key","val","opt","type","push","Array","isArray","String","main","concat","readFile","prototype","hasOwnProperty","call","writeFile","contents","listFiles","callback","readFileNode","writeFileNode","listFilesNode","stats","readTime","readCount","writeTime","writeCount","parseTime","parseCount","initializeTime","initializeCount","compileTime","compileCount","emitTime","emitCount","validateTime","validateCount","optimizeTime","optimizeCount","transformTime","transformCount","extension","optionsResult","parse","opts","arguments","noColors","supported","from","unknownOpts","unknown","write","yellow","trailingArgv","trailing","red","test","baseDir","normalize","asconfigPath","resolvePath","config","asconfigFile","basename","asconfigDir","dirname","asconfig","getAsconfig","asconfigHasEntries","entries","help","out","color","white","cyan","seenAsconfig","Set","add","targets","targetOptions","merge","generalOptions","entry","extends","has","addDefaults","showConfig","unique","values","program","newOptions","setTarget","setNoAssert","noAssert","setExportMemory","noExportMemory","setImportMemory","importMemory","setInitialMemory","initialMemory","setMaximumMemory","maximumMemory","setSharedMemory","sharedMemory","setImportTable","importTable","setExportTable","exportTable","setExplicitStart","explicitStart","setMemoryBase","memoryBase","setTableBase","tableBase","setSourceMap","sourceMap","setNoUnsafe","noUnsafe","setPedantic","pedantic","setLowMemoryLimit","lowMemoryLimit","setExportRuntime","exportRuntime","stackSize","runtime","DEFAULT_STACK_SIZE","setStackSize","use","aliases","i","k","part","p","indexOf","alias","substring","trim","aliasPtr","namePtr","setGlobalAlias","features","disable","split","flag","toUpperCase","disableFeature","enable","enableFeature","optimizeLevel","shrinkLevel","optimize","Math","min","max","setOptimizeLevelHints","newProgram","transforms","transform","tsNodeRegistered","transformArgs","filename","endsWith","transpileOnly","skipProject","classOrModule","resolve","paths","cwd","assign","error","applyTransform","args","transfromTime","measure","libPath","textPtr","pathPtr","customLibDirs","lib","map","libFiles","j","l","libText","packageMains","Map","packageBases","getFile","internalPath","dependeePath","sourceText","sourcePath","plainName","indexName","match","packageName","isPackageRoot","undefined","filePath","basePath","traceResolution","parts","slice","currentPath","relative","mainPath","jsonPath","jsonText","json","ascMain","set","mainDir","parseBacklog","nextFile","getDependee","numErrors","checkDiagnostics","reportDiagnostic","message","runtimeName","runtimePath","runtimeText","isAbsolute","parser","s","normalizedPath","sort","initializeProgram","compile","original","Module","wrapModule","ref","dispose","noValidate","isValid","validate","trapMode","runPass","debugInfo","debug","converge","runPasses","pass","last","emitBinary","next","noEmit","outFile","textFile","jsFile","binaryFile","hasStdout","hasOutput","tsdFile","idlFile","wasm","sourceMapURL","binary","writeStdout","sourceRoot","index","text","getSource","sourcesContent","wastFormat","emitText","emitStackIR","idl","buildIDL","tsd","buildTSD","js","emitAsmjs","printStats","dirPath","outputFilePath","existsSync","readdirSync","filter","used","isObject","location","ex","include","diagnosticPtr","nextDiagnostic","formatDiagnostic","isTTY","diagnostic","DiagnosticMessage","range","Range","relatedRange","rangeSource","source","Source","relatedRangeSource","category","start","end","isError","createStats","fn","hrtime","times","formatTime","time","toFixed","format","count","len","pad","allocBuffer","Buffer","allocUnsafe","Uint8Array","stream","chunk","buffer","reset","toBuffer","offset","read","tscOptions","alwaysStrict","noImplicitAny","noImplicitReturns","noImplicitThis","noEmitOnError","strictNullChecks","experimentalDecorators","noLib","types","allowJs","assertPath","TypeError","normalizeStringPosix","allowAboveRoot","res","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","posix","resolvedPath","resolvedAbsolute","trailingSeparator","joined","to","fromStart","fromEnd","fromLen","toStart","toLen","lastCommonSep","fromCode","_makeLong","hasRoot","matchedSlash","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","pathObject","sep","dir","base","_format","ret","delimiter","win32","umask","previousTimestamp","clocktime","performanceNow","performance","seconds","floor","nanoseconds","mozNow","msNow","oNow","webkitNow","getTime","proc","isCI","env","colors","gray","GRAY","RESET","RED","green","GREEN","YELLOW","blue","BLUE","magenta","MAGENTA","CYAN","WHITE","findFiles","statSync","isDirectory","iname","made","mode","mkdirSync","err0","stat","err1","sanitizeValue","value","Boolean","trunc","Number","v","propagateDefaults","option","default","exec","parseInt","parseFloat","indent","padding","eol","sbCategories","sbOther","description","sb","noCategories","line","hasCategories","currentOptions","parentOptions","parentBaseDir","mergedOptions","mutuallyExclusive","isPath","useNodeResolution","cliOnly","currentValue","parentValue","exclude","includes","defaultValue","string","c","t","fromCharCode","apply","c1","c2","instantiate","instantiateStreaming","demangle","BIGINT","BigUint64Array","THIS","Symbol","decoder","TextDecoder","getStringImpl","Uint32Array","arr","Uint16Array","decode","preInstantiate","imports","extendedExports","getString","abort","msg","colm","trace","n","seed","F_NOEXPORTRUNTIME","postInstantiate","instance","table","__new","__rtti_base","getArrayInfo","id","U32","getInfo","getBase","getValueAlign","clz32","getView","alignLog2","signed","float","Float32Array","Float64Array","Int8Array","Int16Array","Int32Array","BigInt64Array","__getArrayView","align","buf","subarray","getTypedArray","Type","getTypedArrayView","bufPtr","attachTypedArrayFunctions","ctor","bind","U16","__newArray","result","view","__getArray","input","__getArrayBuffer","Uint8ClampedArray","BYTES_PER_ELEMENT","__instanceof","baseId","isResponse","src","Response","isModule","WebAssembly","async","extended","Instance","arrayBuffer","setArgumentsLength","internalName","elem","curr","shift","hash","className","classElem","constructor","thisValue","writable","getOwnPropertyNames","getOwnPropertyDescriptor","getter","setter","enumerable","_default","Rtrace","TOTAL_OVERHEAD","OBJECT_OVERHEAD","BLOCK_OVERHEAD","PTR_VIEW","assert","x","trimStacktrace","levels","stackTraceLimit","mmTagsToString","gcColorToString","onerror","oninfo","oncollect_","oncollect","shadow","shadowStart","blocks","allocSites","freedBlocks","gcProfileStart","allocCount","resizeCount","moveCount","freeCount","heapBase","oninit","onalloc","onresize","onmove","onvisit","onfree","oninterrupt","onyield","onstore","onload","diff","byteLength","grow","Memory","initial","PAGE_SIZE","oldSize","PTR_SIZE","size","errored","isLoad","isRT","syncShadow","mmInfo","gcInfo","gcInfo2","rtId","rtSize","tags","prev","allocStack","getBlockInfo","markShadow","beforeInfo","newSize","unmarkShadow","oldPtr","newPtr","oldInfo","newInfo","freeStack","allocInfo","delete","total","plot","pause","interruptStart","bytes","accessShadow","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","globalThis","Function","window"],"mappings":"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","file":"asc.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"binaryen\"), (function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"binaryen\", \"assemblyscript\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"asc\"] = factory(require(\"binaryen\"), (function webpackLoadOptionalExternalModule() { try { return require(\"assemblyscript\"); } catch(e) {} }()));\n\telse\n\t\troot[\"asc\"] = factory(root[\"binaryen\"], root[\"assemblyscript\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE__911__, __WEBPACK_EXTERNAL_MODULE__525__) {\nreturn ","/**\n * @license\n * Copyright 2020 Daniel Wirtz / The AssemblyScript Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Compiler frontend for node.js\n *\n * Uses the low-level API exported from src/index.ts so it works with the compiler compiled to\n * JavaScript as well as the compiler compiled to WebAssembly (eventually). Runs the sources\n * directly through ts-node if distribution files are not present.\n *\n * Can also be packaged as a bundle suitable for in-browser use with the standard library injected\n * in the build step. See dist/asc.js for the bundle and webpack.config.js for building details.\n */\n\n/* global BUNDLE_VERSION, BUNDLE_LIBRARY, BUNDLE_DEFINITIONS */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\nconst process = require(\"process\"); // ensure shim\n\nprocess.exit = ((exit) => function(code) {\n  if (code) console.log(new Error(\"exit \" + code.toString()).stack);\n  exit(code);\n})(process.exit);\n\nconst utf8 = require(\"./util/utf8\");\nconst colorsUtil = require(\"./util/colors\");\nconst optionsUtil = require(\"./util/options\");\nconst mkdirp = require(\"./util/mkdirp\");\nconst find = require(\"./util/find\");\nconst binaryen = global.binaryen || (global.binaryen = require(\"binaryen\"));\n\nconst dynrequire = typeof __webpack_require__ === \"function\"\n  ? __non_webpack_require__\n  : require;\n\nconst WIN = process.platform === \"win32\";\nconst EOL = WIN ? \"\\r\\n\" : \"\\n\";\nconst SEP = WIN ? \"\\\\\" : \"/\";\n\n// Sets up an extension with its definition counterpart and relevant regexes.\nfunction setupExtension(ext) {\n  if (!ext.startsWith(\".\")) ext = \".\" + ext;\n  return {\n    ext,\n    ext_d: \".d\" + ext,\n    re: new RegExp(\"\\\\\" + ext + \"$\"),\n    re_d: new RegExp(\"\\\\.d\\\\\" + ext + \"$\"),\n    re_except_d: new RegExp(\"^(?!.*\\\\.d\\\\\" + ext + \"$).*\\\\\" + ext + \"$\"),\n    re_index: new RegExp(\"(?:^|[\\\\\\\\\\\\/])index\\\\\" + ext + \"$\")\n  };\n}\n\nconst defaultExtension = setupExtension(\".ts\");\n\n// Proxy Binaryen's ready event\nObject.defineProperty(exports, \"ready\", {\n  get() { return binaryen.ready; }\n});\n\n// Emscripten adds an `uncaughtException` listener to Binaryen that results in an additional\n// useless code fragment on top of an actual error. suppress this:\nif (process.removeAllListeners) process.removeAllListeners(\"uncaughtException\");\n\n// Use distribution files if present, otherwise run the sources directly.\nfunction loadAssemblyScriptJS() {\n  var exports;\n  try {\n    // note that this case will always trigger in recent node.js versions for typical installs\n    // see: https://nodejs.org/api/packages.html#packages_self_referencing_a_package_using_its_name\n    exports = require(\"assemblyscript\");\n  } catch (e) {\n    try { // `asc` on the command line (unnecessary in recent node)\n      exports = dynrequire(\"../dist/assemblyscript.js\");\n    } catch (e) {\n      try { // `asc` on the command line without dist files (unnecessary in recent node)\n        dynrequire(\"ts-node\").register({\n          project: path.join(__dirname, \"..\", \"src\", \"tsconfig.json\"),\n          skipIgnore: true,\n          compilerOptions: { target: \"ES2016\" }\n        });\n        dynrequire(\"../src/glue/js\");\n        exports = dynrequire(\"../src\");\n      } catch (e_ts) {\n        try { // `require(\"dist/asc.js\")` in explicit browser tests\n          exports = dynrequire(\"./assemblyscript\");\n        } catch (e) {\n          throw Error(e_ts.stack + \"\\n---\\n\" + e.stack);\n        }\n      }\n    }\n  }\n  return exports;\n}\n\n// Loads the specified bootstrapped Wasm binary of the compiler.\nfunction loadAssemblyScriptWasm(binaryPath) {\n  const loader = require(\"../lib/loader/umd/index\");\n  const rtrace = new (require(\"../lib/rtrace/umd/index\").Rtrace)({\n    onerror(err, info) { console.log(err, info); },\n    getMemory() { return exports.memory; },\n    oncollect() {\n      var gcProfile = rtrace.gcProfile;\n      if (gcProfile && gcProfile.length && fs.writeFileSync) {\n        let timestamp = Date.now();\n        fs.writeFileSync(`rtrace-gc-profile-${timestamp}.json`, JSON.stringify(gcProfile));\n        fs.writeFileSync(`rtrace-gc-profile-${timestamp}.csv`, `time,memory,pause\\n${gcProfile.join(\"\\n\")}`);\n      }\n    }\n  });\n  var { exports } = loader.instantiateSync(fs.readFileSync(binaryPath), rtrace.install({ binaryen }));\n  if (exports._start) exports._start();\n  return exports;\n}\n\n/** Ensures that an object is a wrapper class instead of just a pointer. */\nfunction __wrap(ptrOrObj, wrapperClass) {\n  if (typeof ptrOrObj === \"number\") {\n    return ptrOrObj === 0 ? null : wrapperClass.wrap(ptrOrObj);\n  }\n  return ptrOrObj;\n}\n\nvar assemblyscript, __newString, __getString, __pin, __unpin, __collect;\n\nfunction loadAssemblyScript() {\n  const wasmArg = process.argv.findIndex(arg => arg == \"--wasm\");\n  if (~wasmArg) {\n    let binaryPath = process.argv[wasmArg + 1];\n    process.argv.splice(wasmArg, 2);\n    assemblyscript = loadAssemblyScriptWasm(binaryPath);\n    __newString = assemblyscript.__newString;\n    __getString = assemblyscript.__getString;\n    __pin = assemblyscript.__pin;\n    __unpin = assemblyscript.__unpin;\n    __collect = assemblyscript.__collect;\n  } else {\n    assemblyscript = loadAssemblyScriptJS();\n    __newString = str => str;\n    __getString = ptr => ptr;\n    __pin = ptr => ptr;\n    __unpin = ptr => undefined;\n    __collect = incremental => undefined;\n  }\n}\nloadAssemblyScript();\n\n/** Whether this is a webpack bundle or not. */\nexports.isBundle = typeof BUNDLE_VERSION === \"string\";\n\n/** AssemblyScript version. */\nexports.version = exports.isBundle ? BUNDLE_VERSION : dynrequire(\"../package.json\").version;\n\n/** Available CLI options. */\nexports.options = require(\"./asc.json\");\n\n/** Prefix used for library files. */\nexports.libraryPrefix = __getString(assemblyscript.LIBRARY_PREFIX.valueOf());\n\n/** Default Binaryen optimization level. */\nexports.defaultOptimizeLevel = 3;\n\n/** Default Binaryen shrink level. */\nexports.defaultShrinkLevel = 1;\n\n/** Bundled library files. */\nexports.libraryFiles = exports.isBundle ? BUNDLE_LIBRARY : (() => { // set up if not a bundle\n  const libDir = path.join(__dirname, \"..\", \"std\", \"assembly\");\n  const bundled = {};\n  find\n    .files(libDir, defaultExtension.re_except_d)\n    .forEach(file => {\n      bundled[file.replace(defaultExtension.re, \"\")] = fs.readFileSync(path.join(libDir, file), \"utf8\");\n    });\n  return bundled;\n})();\n\n/** Bundled definition files. */\nexports.definitionFiles = exports.isBundle ? BUNDLE_DEFINITIONS : (() => { // set up if not a bundle\n  const readDefinition = name => fs.readFileSync(\n    path.join(__dirname, \"..\", \"std\", name, \"index\" + defaultExtension.ext_d),\n    \"utf8\"\n  );\n  return {\n    assembly: readDefinition(\"assembly\"),\n    portable: readDefinition(\"portable\")\n  };\n})();\n\n/** Convenience function that parses and compiles source strings directly. */\nexports.compileString = (sources, options) => {\n  if (typeof sources === \"string\") sources = { [\"input\" + defaultExtension.ext]: sources };\n  const output = Object.create({\n    stdout: createMemoryStream(),\n    stderr: createMemoryStream()\n  });\n  var argv = [\n    \"--binaryFile\", \"binary\",\n    \"--textFile\", \"text\",\n  ];\n  Object.keys(options || {}).forEach(key => {\n    var val = options[key];\n    var opt = exports.options[key];\n    if (opt && opt.type === \"b\") {\n      if (val) argv.push(\"--\" + key);\n    } else {\n      if (Array.isArray(val)) {\n        val.forEach(val => { argv.push(\"--\" + key, String(val)); });\n      }\n      else argv.push(\"--\" + key, String(val));\n    }\n  });\n  exports.main(argv.concat(Object.keys(sources)), {\n    stdout: output.stdout,\n    stderr: output.stderr,\n    readFile: name => Object.prototype.hasOwnProperty.call(sources, name) ? sources[name] : null,\n    writeFile: (name, contents) => { output[name] = contents; },\n    listFiles: () => []\n  });\n  return output;\n};\n\n/** Runs the command line utility using the specified arguments array. */\nexports.main = function main(argv, options, callback) {\n  if (typeof options === \"function\") {\n    callback = options;\n    options = {};\n  } else if (!options) {\n    options = {};\n  }\n\n  const stdout = options.stdout || process.stdout;\n  const stderr = options.stderr || process.stderr;\n  const readFile = options.readFile || readFileNode;\n  const writeFile = options.writeFile || writeFileNode;\n  const listFiles = options.listFiles || listFilesNode;\n  const stats = options.stats || createStats();\n  let extension = defaultExtension;\n\n  // Output must be specified if not present in the environment\n  if (!stdout) throw Error(\"'options.stdout' must be specified\");\n  if (!stderr) throw Error(\"'options.stderr' must be specified\");\n\n  // Parse command line options but do not populate option defaults yet\n  const optionsResult = optionsUtil.parse(argv, exports.options, false);\n  let opts = optionsResult.options;\n  argv = optionsResult.arguments;\n\n  if (opts.noColors) {\n    colorsUtil.stdout.supported =\n    colorsUtil.stderr.supported = false;\n  } else {\n    colorsUtil.stdout = colorsUtil.from(stdout);\n    colorsUtil.stderr = colorsUtil.from(stderr);\n  }\n\n  // Check for unknown options\n  const unknownOpts = optionsResult.unknown;\n  if (unknownOpts.length) {\n    unknownOpts.forEach(arg => {\n      stderr.write(colorsUtil.stderr.yellow(\"WARNING \") + \"Unknown option '\" + arg + \"'\" + EOL);\n    });\n  }\n\n  // Check for trailing arguments\n  const trailingArgv = optionsResult.trailing;\n  if (trailingArgv.length) {\n    stderr.write(colorsUtil.stderr.yellow(\"WARNING \") + \"Unsupported trailing arguments: \" + trailingArgv.join(\" \") + EOL);\n  }\n\n  // Use default callback if none is provided\n  if (!callback) callback = function defaultCallback(err) {\n    var code = 0;\n    if (err) {\n      stderr.write(colorsUtil.stderr.red(\"FAILURE \") + err.stack.replace(/^ERROR: /i, \"\") + EOL);\n      code = 1;\n    }\n    return code;\n  };\n\n  // Just print the version if requested\n  if (opts.version) {\n    stdout.write(\"Version \" + exports.version + EOL);\n    return callback(null);\n  }\n\n  // Use another extension if requested\n  if (typeof opts.extension === \"string\") {\n    if (/^\\.?[0-9a-zA-Z]{1,14}$/.test(opts.extension)) {\n      extension = setupExtension(opts.extension);\n    } else {\n      return callback(Error(\"Invalid extension: \" + opts.extension));\n    }\n  }\n\n  // Set up base directory\n  const baseDir = path.normalize(opts.baseDir || \".\");\n\n  // Check if a config file is present\n  let asconfigPath = optionsUtil.resolvePath(opts.config || \"asconfig.json\", baseDir);\n  let asconfigFile = path.basename(asconfigPath);\n  let asconfigDir = path.dirname(asconfigPath);\n  let asconfig = getAsconfig(asconfigFile, asconfigDir, readFile);\n  let asconfigHasEntries = asconfig != null && Array.isArray(asconfig.entries) && asconfig.entries.length;\n\n  // Print the help message if requested or no source files are provided\n  if (opts.help || (!argv.length && !asconfigHasEntries)) {\n    var out = opts.help ? stdout : stderr;\n    var color = opts.help ? colorsUtil.stdout : colorsUtil.stderr;\n    out.write([\n      color.white(\"SYNTAX\"),\n      \"  \" + color.cyan(\"asc\") + \" [entryFile ...] [options]\",\n      \"\",\n      color.white(\"EXAMPLES\"),\n      \"  \" + color.cyan(\"asc\") + \" hello\" + extension.ext,\n      \"  \" + color.cyan(\"asc\") + \" hello\" + extension.ext + \" -b hello.wasm -t hello.wat\",\n      \"  \" + color.cyan(\"asc\") + \" hello1\" + extension.ext + \" hello2\" + extension.ext + \" -b -O > hello.wasm\",\n      \"  \" + color.cyan(\"asc\") + \" --config asconfig.json --target release\",\n      \"\",\n      color.white(\"OPTIONS\"),\n    ].concat(\n      optionsUtil.help(exports.options, 24, EOL)\n    ).join(EOL) + EOL);\n    return callback(null);\n  }\n\n  // I/O must be specified if not present in the environment\n  if (!fs.readFileSync) {\n    if (readFile === readFileNode) throw Error(\"'options.readFile' must be specified\");\n    if (writeFile === writeFileNode) throw Error(\"'options.writeFile' must be specified\");\n    if (listFiles === listFilesNode) throw Error(\"'options.listFiles' must be specified\");\n  }\n\n  // Load additional options from asconfig.json\n  const seenAsconfig = new Set();\n  seenAsconfig.add(asconfigPath);\n  const target = opts.target || \"release\";\n  while (asconfig) {\n    // Merge target first\n    if (asconfig.targets) {\n      const targetOptions = asconfig.targets[target];\n      if (targetOptions) {\n        opts = optionsUtil.merge(exports.options, opts, targetOptions, asconfigDir);\n      }\n    }\n    // Merge general options\n    const generalOptions = asconfig.options;\n    if (generalOptions) {\n      opts = optionsUtil.merge(exports.options, opts, generalOptions, asconfigDir);\n    }\n\n    // Append entries\n    if (asconfig.entries) {\n      for (let entry of asconfig.entries) {\n        argv.push(optionsUtil.resolvePath(entry, asconfigDir));\n      }\n    }\n\n    // Look up extended asconfig and repeat\n    if (asconfig.extends) {\n      asconfigPath = optionsUtil.resolvePath(asconfig.extends, asconfigDir, true);\n      asconfigFile = path.basename(asconfigPath);\n      asconfigDir = path.dirname(asconfigPath);\n      if (seenAsconfig.has(asconfigPath)) break;\n      seenAsconfig.add(asconfigPath);\n      asconfig = getAsconfig(asconfigFile, asconfigDir, readFile);\n    } else {\n      break;\n    }\n  }\n\n  // Populate option defaults once user-defined options are set\n  optionsUtil.addDefaults(exports.options, opts);\n\n  // If showConfig print options and exit\n  if (opts.showConfig) {\n    stderr.write(JSON.stringify({\n      options: opts,\n      entries: argv\n    }, null, 2));\n    return callback(null);\n  }\n\n  // create a unique set of values\n  function unique(values) {\n    return [...new Set(values)];\n  }\n\n  // Set up options\n  var program;\n  const compilerOptions = __pin(assemblyscript.newOptions());\n  assemblyscript.setTarget(compilerOptions, 0);\n  assemblyscript.setNoAssert(compilerOptions, opts.noAssert);\n  assemblyscript.setExportMemory(compilerOptions, !opts.noExportMemory);\n  assemblyscript.setImportMemory(compilerOptions, opts.importMemory);\n  assemblyscript.setInitialMemory(compilerOptions, opts.initialMemory >>> 0);\n  assemblyscript.setMaximumMemory(compilerOptions, opts.maximumMemory >>> 0);\n  assemblyscript.setSharedMemory(compilerOptions, opts.sharedMemory);\n  assemblyscript.setImportTable(compilerOptions, opts.importTable);\n  assemblyscript.setExportTable(compilerOptions, opts.exportTable);\n  assemblyscript.setExplicitStart(compilerOptions, opts.explicitStart);\n  assemblyscript.setMemoryBase(compilerOptions, opts.memoryBase >>> 0);\n  assemblyscript.setTableBase(compilerOptions, opts.tableBase >>> 0);\n  assemblyscript.setSourceMap(compilerOptions, opts.sourceMap != null);\n  assemblyscript.setNoUnsafe(compilerOptions, opts.noUnsafe);\n  assemblyscript.setPedantic(compilerOptions, opts.pedantic);\n  assemblyscript.setLowMemoryLimit(compilerOptions, opts.lowMemoryLimit >>> 0);\n  assemblyscript.setExportRuntime(compilerOptions, opts.exportRuntime);\n  if (!opts.stackSize && opts.runtime == \"incremental\") {\n    opts.stackSize = assemblyscript.DEFAULT_STACK_SIZE;\n  }\n  assemblyscript.setStackSize(compilerOptions, opts.stackSize);\n\n  // Instrument callback to perform GC\n  callback = (function(callback) {\n    return function wrappedCallback(err) {\n      __unpin(compilerOptions);\n      if (program) __unpin(program);\n      __collect();\n      return callback(err);\n    };\n  })(callback);\n\n  // Add or override aliases if specified\n  if (opts.use) {\n    let aliases = opts.use;\n    for (let i = 0, k = aliases.length; i < k; ++i) {\n      let part = aliases[i];\n      let p = part.indexOf(\"=\");\n      if (p < 0) return callback(Error(\"Global alias '\" + part + \"' is invalid.\"));\n      let alias = part.substring(0, p).trim();\n      let name = part.substring(p + 1).trim();\n      if (!alias.length) return callback(Error(\"Global alias '\" + part + \"' is invalid.\"));\n      {\n        let aliasPtr = __pin(__newString(alias));\n        let namePtr = __newString(name);\n        assemblyscript.setGlobalAlias(compilerOptions, aliasPtr, namePtr);\n        __unpin(aliasPtr);\n      }\n    }\n  }\n\n  // Disable default features if specified\n  var features;\n  if ((features = opts.disable) != null) {\n    if (typeof features === \"string\") features = features.split(\",\");\n    for (let i = 0, k = features.length; i < k; ++i) {\n      let name = features[i].trim();\n      let flag = assemblyscript[\"FEATURE_\" + name.replace(/-/g, \"_\").toUpperCase()];\n      if (!flag) return callback(Error(\"Feature '\" + name + \"' is unknown.\"));\n      assemblyscript.disableFeature(compilerOptions, flag);\n    }\n  }\n\n  // Enable experimental features if specified\n  if ((features = opts.enable) != null) {\n    if (typeof features === \"string\") features = features.split(\",\");\n    for (let i = 0, k = features.length; i < k; ++i) {\n      let name = features[i].trim();\n      let flag = assemblyscript[\"FEATURE_\" + name.replace(/-/g, \"_\").toUpperCase()];\n      if (!flag) return callback(Error(\"Feature '\" + name + \"' is unknown.\"));\n      assemblyscript.enableFeature(compilerOptions, flag);\n    }\n  }\n\n  // Set up optimization levels\n  var optimizeLevel = 0;\n  var shrinkLevel = 0;\n  if (opts.optimize) {\n    optimizeLevel = exports.defaultOptimizeLevel;\n    shrinkLevel = exports.defaultShrinkLevel;\n  }\n  if (typeof opts.optimizeLevel === \"number\") optimizeLevel = opts.optimizeLevel;\n  if (typeof opts.shrinkLevel === \"number\") shrinkLevel = opts.shrinkLevel;\n  optimizeLevel = Math.min(Math.max(optimizeLevel, 0), 3);\n  shrinkLevel = Math.min(Math.max(shrinkLevel, 0), 2);\n  assemblyscript.setOptimizeLevelHints(compilerOptions, optimizeLevel, shrinkLevel);\n\n  // Initialize the program\n  program = __pin(assemblyscript.newProgram(compilerOptions));\n\n  // Set up transforms\n  const transforms = [];\n  if (opts.transform) {\n    let tsNodeRegistered = false;\n    let transformArgs = unique(opts.transform);\n    for (let i = 0, k = transformArgs.length; i < k; ++i) {\n      let filename = transformArgs[i].trim();\n      if (!tsNodeRegistered && filename.endsWith(\".ts\")) { // ts-node requires .ts specifically\n        dynrequire(\"ts-node\").register({ transpileOnly: true, skipProject: true, compilerOptions: { target: \"ES2016\" } });\n        tsNodeRegistered = true;\n      }\n      try {\n        const classOrModule = dynrequire(dynrequire.resolve(filename, { paths: [baseDir, process.cwd()] }));\n        if (typeof classOrModule === \"function\") {\n          Object.assign(classOrModule.prototype, {\n            program,\n            baseDir,\n            stdout,\n            stderr,\n            log: console.error,\n            readFile,\n            writeFile,\n            listFiles\n          });\n          transforms.push(new classOrModule());\n        } else {\n          transforms.push(classOrModule); // legacy module\n        }\n      } catch (e) {\n        return callback(e);\n      }\n    }\n  }\n\n  function applyTransform(name, ...args) {\n    for (let i = 0, k = transforms.length; i < k; ++i) {\n      let transform = transforms[i];\n      if (typeof transform[name] === \"function\") {\n        try {\n          stats.transformCount++;\n          stats.transfromTime += measure(() => {\n            transform[name](...args);\n          });\n        } catch (e) {\n          return e;\n        }\n      }\n    }\n  }\n\n  // Parse library files\n  Object.keys(exports.libraryFiles).forEach(libPath => {\n    if (libPath.indexOf(\"/\") >= 0) return; // in sub-directory: imported on demand\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      let textPtr = __pin(__newString(exports.libraryFiles[libPath]));\n      let pathPtr = __newString(exports.libraryPrefix + libPath + extension.ext);\n      assemblyscript.parse(program, textPtr, pathPtr, false);\n      __unpin(textPtr);\n    });\n  });\n  let customLibDirs = [];\n  if (opts.lib) {\n    let lib = opts.lib;\n    if (typeof lib === \"string\") lib = lib.split(\",\");\n    customLibDirs.push(...lib.map(p => p.trim()));\n    customLibDirs = unique(customLibDirs); // `lib` and `customLibDirs` may include duplicates\n    for (let i = 0, k = customLibDirs.length; i < k; ++i) { // custom\n      let libDir = customLibDirs[i];\n      let libFiles;\n      if (libDir.endsWith(extension.ext)) {\n        libFiles = [ path.basename(libDir) ];\n        libDir = path.dirname(libDir);\n      } else {\n        libFiles = listFiles(libDir, baseDir) || [];\n      }\n      for (let j = 0, l = libFiles.length; j < l; ++j) {\n        let libPath = libFiles[j];\n        let libText = readFile(libPath, libDir);\n        if (libText === null) return callback(Error(\"Library file '\" + libPath + \"' not found.\"));\n        stats.parseCount++;\n        exports.libraryFiles[libPath.replace(extension.re, \"\")] = libText;\n        stats.parseTime += measure(() => {\n          let textPtr = __pin(__newString(libText));\n          let pathPtr = __newString(exports.libraryPrefix + libPath);\n          assemblyscript.parse(program, textPtr, pathPtr, false);\n          __unpin(textPtr);\n        });\n      }\n    }\n  }\n  opts.path = opts.path || [];\n\n  // Maps package names to parent directory\n  var packageMains = new Map();\n  var packageBases = new Map();\n\n  // Gets the file matching the specified source path, imported at the given dependee path\n  function getFile(internalPath, dependeePath) {\n    var sourceText = null; // text reported back to the compiler\n    var sourcePath = null; // path reported back to the compiler\n\n    const libraryPrefix = exports.libraryPrefix;\n    const libraryFiles = exports.libraryFiles;\n\n    // Try file.ext, file/index.ext, file.d.ext\n    if (!internalPath.startsWith(libraryPrefix)) {\n      if ((sourceText = readFile(sourcePath = internalPath + extension.ext, baseDir)) == null) {\n        if ((sourceText = readFile(sourcePath = internalPath + \"/index\" + extension.ext, baseDir)) == null) {\n          // portable d.ext: uses the .js file next to it in JS or becomes an import in Wasm\n          sourcePath = internalPath + extension.ext;\n          sourceText = readFile(internalPath + extension.ext_d, baseDir);\n        }\n      }\n\n    // Search library in this order: stdlib, custom lib dirs, paths\n    } else {\n      const plainName = internalPath.substring(libraryPrefix.length);\n      const indexName = plainName + \"/index\";\n      if (Object.prototype.hasOwnProperty.call(libraryFiles, plainName)) {\n        sourceText = libraryFiles[plainName];\n        sourcePath = libraryPrefix + plainName + extension.ext;\n      } else if (Object.prototype.hasOwnProperty.call(libraryFiles, indexName)) {\n        sourceText = libraryFiles[indexName];\n        sourcePath = libraryPrefix + indexName + extension.ext;\n      } else { // custom lib dirs\n        for (const libDir of customLibDirs) {\n          if ((sourceText = readFile(plainName + extension.ext, libDir)) != null) {\n            sourcePath = libraryPrefix + plainName + extension.ext;\n            break;\n          } else {\n            if ((sourceText = readFile(indexName + extension.ext, libDir)) != null) {\n              sourcePath = libraryPrefix + indexName + extension.ext;\n              break;\n            }\n          }\n        }\n        if (sourceText == null) { // paths\n          const match = internalPath.match(/^~lib\\/((?:@[^/]+\\/)?[^/]+)(?:\\/(.+))?/); // ~lib/(pkg)/(path), ~lib/(@org/pkg)/(path)\n          if (match) {\n            const packageName = match[1];\n            const isPackageRoot = match[2] === undefined;\n            const filePath = isPackageRoot ? \"index\" : match[2];\n            const basePath = packageBases.has(dependeePath) ? packageBases.get(dependeePath) : \".\";\n            if (opts.traceResolution) stderr.write(\"Looking for package '\" + packageName + \"' file '\" + filePath + \"' relative to '\" + basePath + \"'\" + EOL);\n            const paths = [];\n            const parts = path.resolve(baseDir, basePath).split(SEP);\n            for (let i = parts.length, k = WIN ? 1 : 0; i >= k; --i) {\n              if (parts[i - 1] !== \"node_modules\") paths.push(parts.slice(0, i).join(SEP) + SEP + \"node_modules\");\n            }\n            for (const currentPath of paths.concat(...opts.path).map(p => path.relative(baseDir, p))) {\n              if (opts.traceResolution) stderr.write(\"  in \" + path.join(currentPath, packageName) + EOL);\n              let mainPath = \"assembly\";\n              if (packageMains.has(packageName)) { // use cached\n                mainPath = packageMains.get(packageName);\n              } else { // evaluate package.json\n                let jsonPath = path.join(currentPath, packageName, \"package.json\");\n                let jsonText = readFile(jsonPath, baseDir);\n                if (jsonText != null) {\n                  try {\n                    let json = JSON.parse(jsonText);\n                    if (typeof json.ascMain === \"string\") {\n                      mainPath = json.ascMain.replace(extension.re_index, \"\");\n                      packageMains.set(packageName, mainPath);\n                    }\n                  } catch (e) { /* nop */ }\n                }\n              }\n              const mainDir = path.join(currentPath, packageName, mainPath);\n              const plainName = filePath;\n              if ((sourceText = readFile(path.join(mainDir, plainName + extension.ext), baseDir)) != null) {\n                sourcePath = libraryPrefix + packageName + \"/\" + plainName + extension.ext;\n                packageBases.set(sourcePath.replace(extension.re, \"\"), path.join(currentPath, packageName));\n                if (opts.traceResolution) stderr.write(\"  -> \" + path.join(mainDir, plainName + extension.ext) + EOL);\n                break;\n              } else if (!isPackageRoot) {\n                const indexName = filePath + \"/index\";\n                if ((sourceText = readFile(path.join(mainDir, indexName + extension.ext), baseDir)) !== null) {\n                  sourcePath = libraryPrefix + packageName + \"/\" + indexName + extension.ext;\n                  packageBases.set(sourcePath.replace(extension.re, \"\"), path.join(currentPath, packageName));\n                  if (opts.traceResolution) stderr.write(\"  -> \" + path.join(mainDir, indexName + extension.ext) + EOL);\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    // No such file\n    if (sourceText == null) return null;\n    return { sourceText, sourcePath };\n  }\n\n  // Parses the backlog of imported files after including entry files\n  function parseBacklog() {\n    var internalPath;\n    while ((internalPath = __getString(assemblyscript.nextFile(program)))) {\n      let file = getFile(internalPath, assemblyscript.getDependee(program, internalPath));\n      if (file) {\n        stats.parseCount++;\n        stats.parseTime += measure(() => {\n          let textPtr = __pin(__newString(file.sourceText));\n          let pathPtr = __newString(file.sourcePath);\n          assemblyscript.parse(program, textPtr, pathPtr, false);\n          __unpin(textPtr);\n        });\n      } else {\n        stats.parseTime += measure(() => {\n          let textPtr = __newString(null); // no need to pin\n          let pathPtr = __newString(internalPath + extension.ext);\n          assemblyscript.parse(program, textPtr, pathPtr, false);\n        });\n      }\n    }\n    var numErrors = checkDiagnostics(program, stderr, options.reportDiagnostic);\n    if (numErrors) {\n      const err = Error(numErrors + \" parse error(s)\");\n      err.stack = err.message; // omit stack\n      return callback(err);\n    }\n  }\n\n  // Include runtime before entry files so its setup runs first\n  {\n    let runtimeName = String(opts.runtime);\n    let runtimePath = \"rt/index-\" + runtimeName;\n    let runtimeText = exports.libraryFiles[runtimePath];\n    if (runtimeText == null) {\n      runtimePath = runtimeName;\n      runtimeText = readFile(runtimePath + extension.ext, baseDir);\n      if (runtimeText == null) return callback(Error(`Runtime '${runtimeName}' not found.`));\n    } else {\n      runtimePath = \"~lib/\" + runtimePath;\n    }\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      let textPtr = __pin(__newString(runtimeText));\n      let pathPtr = __newString(runtimePath + extension.ext);\n      assemblyscript.parse(program, textPtr, pathPtr, true);\n      __unpin(textPtr);\n    });\n  }\n\n  // Include entry files\n  for (let i = 0, k = argv.length; i < k; ++i) {\n    const filename = argv[i];\n\n    let sourcePath = String(filename).replace(/\\\\/g, \"/\").replace(extension.re, \"\").replace(/[\\\\/]$/, \"\");\n\n    // Setting the path to relative path\n    sourcePath = path.isAbsolute(sourcePath) ? path.relative(baseDir, sourcePath).replace(/\\\\/g, \"/\") : sourcePath;\n\n    // Try entryPath.ext, then entryPath/index.ext\n    let sourceText = readFile(sourcePath + extension.ext, baseDir);\n    if (sourceText == null) {\n      sourceText = readFile(sourcePath + \"/index\" + extension.ext, baseDir);\n      if (sourceText != null) sourcePath += \"/index\" + extension.ext;\n      else sourcePath += extension.ext;\n    } else {\n      sourcePath += extension.ext;\n    }\n\n    stats.parseCount++;\n    stats.parseTime += measure(() => {\n      let textPtr = __pin(__newString(sourceText));\n      let pathPtr = __newString(sourcePath);\n      assemblyscript.parse(program, textPtr, pathPtr, true);\n      __unpin(textPtr);\n    });\n  }\n\n  // Parse entry files\n  {\n    let code = parseBacklog();\n    if (code) return code;\n  }\n\n  // Call afterParse transform hook\n  {\n    let error = applyTransform(\"afterParse\", program.parser);\n    if (error) return callback(error);\n  }\n\n  // Parse additional files, if any\n  {\n    let code = parseBacklog();\n    if (code) return code;\n  }\n\n  // Print files and exit if listFiles\n  if (opts.listFiles) {\n    // FIXME: not a proper C-like API\n    stderr.write(program.sources.map(s => s.normalizedPath).sort().join(EOL) + EOL);\n    return callback(null);\n  }\n\n  // Pre-emptively initialize the program\n  stats.initializeCount++;\n  stats.initializeTime += measure(() => {\n    assemblyscript.initializeProgram(program);\n  });\n\n  // Call afterInitialize transform hook\n  {\n    let error = applyTransform(\"afterInitialize\", program);\n    if (error) return callback(error);\n  }\n\n  var module;\n  stats.compileCount++;\n  stats.compileTime += measure(() => {\n    module = assemblyscript.compile(program);\n    // From here on we are going to use Binaryen.js, except that we keep pass\n    // order as defined in the compiler.\n    if (typeof module === \"number\") { // Wasm\n      const original = assemblyscript.Module.wrap(module);\n      module = binaryen.wrapModule(original.ref);\n      module.optimize = function(...args) {\n        original.optimize(...args);\n      };\n    } else { // JS\n      const original = module;\n      module = binaryen.wrapModule(module.ref);\n      module.optimize = function(...args) {\n        original.optimize(...args);\n      };\n    }\n  });\n  var numErrors = checkDiagnostics(program, stderr, options.reportDiagnostic);\n  if (numErrors) {\n    if (module) module.dispose();\n    const err = Error(numErrors + \" compile error(s)\");\n    err.stack = err.message; // omit stack\n    return callback(err);\n  }\n\n  // Call afterCompile transform hook\n  {\n    let error = applyTransform(\"afterCompile\", module);\n    if (error) return callback(error);\n  }\n\n  // Validate the module if requested\n  if (!opts.noValidate) {\n    stats.validateCount++;\n    let isValid;\n    stats.validateTime += measure(() => {\n      isValid = module.validate();\n    });\n    if (!isValid) {\n      module.dispose();\n      return callback(Error(\"validate error\"));\n    }\n  }\n\n  // Set Binaryen-specific options\n  if (opts.trapMode === \"clamp\") {\n    stats.optimizeCount++;\n    stats.optimizeTime += measure(() => {\n      module.runPass(\"trap-mode-clamp\");\n    });\n  } else if (opts.trapMode === \"js\") {\n    stats.optimizeCount++;\n    stats.optimizeTime += measure(() => {\n      module.runPass(\"trap-mode-js\");\n    });\n  } else if (opts.trapMode !== \"allow\") {\n    module.dispose();\n    return callback(Error(\"Unsupported trap mode\"));\n  }\n\n  // Optimize the module\n  const debugInfo = opts.debug;\n  const converge = opts.converge;\n  const runPasses = [];\n  if (opts.runPasses) {\n    if (typeof opts.runPasses === \"string\") {\n      opts.runPasses = opts.runPasses.split(\",\");\n    }\n    if (opts.runPasses.length) {\n      opts.runPasses.forEach(pass => {\n        if (runPasses.indexOf(pass = pass.trim()) < 0)\n          runPasses.push(pass);\n      });\n    }\n  }\n\n  stats.optimizeTime += measure(() => {\n    stats.optimizeCount++;\n    module.optimize(optimizeLevel, shrinkLevel, debugInfo);\n    module.runPasses(runPasses);\n    if (converge) {\n      let last = module.emitBinary();\n      do {\n        stats.optimizeCount++;\n        module.optimize(optimizeLevel, shrinkLevel, debugInfo);\n        module.runPasses(runPasses);\n        let next = module.emitBinary();\n        if (next.length >= last.length) {\n          if (next.length > last.length) {\n            stderr.write(\"Last converge was suboptimial.\" + EOL);\n          }\n          break;\n        }\n        last = next;\n      } while (true);\n    }\n  });\n\n  // Prepare output\n  if (!opts.noEmit) {\n    if (opts.outFile != null) {\n      if (/\\.was?t$/.test(opts.outFile) && opts.textFile == null) {\n        opts.textFile = opts.outFile;\n      } else if (/\\.js$/.test(opts.outFile) && opts.jsFile == null) {\n        opts.jsFile = opts.outFile;\n      } else if (opts.binaryFile == null) {\n        opts.binaryFile = opts.outFile;\n      }\n    }\n\n    let hasStdout = false;\n    let hasOutput = opts.textFile != null\n                 || opts.binaryFile != null\n                 || opts.jsFile != null\n                 || opts.tsdFile != null\n                 || opts.idlFile != null;\n\n    // Write binary\n    if (opts.binaryFile != null) {\n      let basename = path.basename(opts.binaryFile);\n      let sourceMapURL = opts.sourceMap != null\n        ? opts.sourceMap.length\n          ? opts.sourceMap\n          : \"./\" + basename + \".map\"\n        : null;\n\n      let wasm;\n      stats.emitCount++;\n      stats.emitTime += measure(() => {\n        wasm = module.emitBinary(sourceMapURL);\n      });\n\n      if (opts.binaryFile.length) {\n        writeFile(opts.binaryFile, wasm.binary, baseDir);\n      } else {\n        writeStdout(wasm.binary);\n        hasStdout = true;\n      }\n\n      // Post-process source map\n      if (wasm.sourceMap != \"\") {\n        if (opts.binaryFile.length) {\n          let map = JSON.parse(wasm.sourceMap);\n          map.sourceRoot = \"./\" + basename;\n          let contents = [];\n          map.sources.forEach((name, index) => {\n            let text = assemblyscript.getSource(program, __newString(name.replace(extension.re, \"\")));\n            if (text == null) return callback(Error(\"Source of file '\" + name + \"' not found.\"));\n            contents[index] = text;\n          });\n          map.sourcesContent = contents;\n          writeFile(path.join(\n            path.dirname(opts.binaryFile),\n            path.basename(sourceMapURL)\n          ).replace(/^\\.\\//, \"\"), JSON.stringify(map), baseDir);\n        } else {\n          stderr.write(\"Skipped source map (stdout already occupied)\" + EOL);\n        }\n      }\n    }\n\n    // Write text (also fallback)\n    if (opts.textFile != null || !hasOutput) {\n      let out;\n      if (opts.textFile != null && opts.textFile.length) {\n        // use superset text format when extension is `.wast`.\n        // Otherwise use official stack IR format (wat).\n        let wastFormat = opts.textFile.endsWith('.wast');\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          if (wastFormat) {\n            out = module.emitText();\n          } else {\n            out = module.emitStackIR(true);\n          }\n        });\n        writeFile(opts.textFile, out, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          out = module.emitStackIR(true);\n        });\n        writeStdout(out);\n      }\n    }\n\n    // Write WebIDL\n    if (opts.idlFile != null) {\n      let idl;\n      if (opts.idlFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          idl = assemblyscript.buildIDL(program);\n        });\n        writeFile(opts.idlFile, __getString(idl), baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          idl = assemblyscript.buildIDL(program);\n        });\n        writeStdout(__getString(idl));\n        hasStdout = true;\n      }\n    }\n\n    // Write TypeScript definition\n    if (opts.tsdFile != null) {\n      let tsd;\n      if (opts.tsdFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          tsd = assemblyscript.buildTSD(program);\n        });\n        writeFile(opts.tsdFile, __getString(tsd), baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          tsd = assemblyscript.buildTSD(program);\n        });\n        writeStdout(__getString(tsd));\n        hasStdout = true;\n      }\n    }\n\n    // Write JS (modifies the binary, so must be last)\n    if (opts.jsFile != null) {\n      let js;\n      if (opts.jsFile.length) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          js = module.emitAsmjs();\n        });\n        writeFile(opts.jsFile, js, baseDir);\n      } else if (!hasStdout) {\n        stats.emitCount++;\n        stats.emitTime += measure(() => {\n          js = module.emitAsmjs();\n        });\n        writeStdout(js);\n      }\n    }\n  }\n\n  module.dispose();\n  if (opts.measure) {\n    printStats(stats, stderr);\n  }\n\n  return callback(null);\n\n  function readFileNode(filename, baseDir) {\n    let name = path.resolve(baseDir, filename);\n    try {\n      let text;\n      stats.readCount++;\n      stats.readTime += measure(() => {\n        text = fs.readFileSync(name, \"utf8\");\n      });\n      return text;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  function writeFileNode(filename, contents, baseDir) {\n    try {\n      stats.writeCount++;\n      stats.writeTime += measure(() => {\n        const dirPath = path.resolve(baseDir, path.dirname(filename));\n        filename = path.basename(filename);\n        const outputFilePath = path.join(dirPath, filename);\n        if (!fs.existsSync(dirPath)) mkdirp(dirPath);\n        fs.writeFileSync(outputFilePath, contents);\n      });\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  function listFilesNode(dirname, baseDir) {\n    var files;\n    try {\n      stats.readCount++;\n      stats.readTime += measure(() => {\n        files = fs.readdirSync(path.join(baseDir, dirname))\n          .filter(file => extension.re_except_d.test(file));\n      });\n      return files;\n    } catch (e) {\n      return null;\n    }\n  }\n\n  function writeStdout(contents) {\n    if (!writeStdout.used) {\n      stats.writeCount++;\n      writeStdout.used = true;\n    }\n    stats.writeTime += measure(() => {\n      stdout.write(contents);\n    });\n  }\n};\n\nconst toString = Object.prototype.toString;\n\nfunction isObject(arg) {\n  return toString.call(arg) === \"[object Object]\";\n}\n\nfunction getAsconfig(file, baseDir, readFile) {\n  const contents = readFile(file, baseDir);\n  const location = path.join(baseDir, file);\n  if (!contents) return null;\n\n  // obtain the configuration\n  let config;\n  try {\n    config = JSON.parse(contents);\n  } catch(ex) {\n    throw new Error(\"Asconfig is not valid json: \" + location);\n  }\n\n  // validate asconfig shape\n  if (config.options && !isObject(config.options)) {\n    throw new Error(\"Asconfig.options is not an object: \" + location);\n  }\n\n  if (config.include && !Array.isArray(config.include)) {\n    throw new Error(\"Asconfig.include is not an array: \" + location);\n  }\n\n  if (config.targets) {\n    if (!isObject(config.targets)) {\n      throw new Error(\"Asconfig.targets is not an object: \" + location);\n    }\n    const targets = Object.keys(config.targets);\n    for (let i = 0; i < targets.length; i++) {\n      const target = targets[i];\n      if (!isObject(config.targets[target])) {\n        throw new Error(\"Asconfig.targets.\" + target + \" is not an object: \" + location);\n      }\n    }\n  }\n\n  if (config.extends && typeof config.extends !== \"string\") {\n    throw new Error(\"Asconfig.extends is not a string: \" + location);\n  }\n\n  return config;\n}\n\nexports.getAsconfig = getAsconfig;\n\n/** Checks diagnostics emitted so far for errors. */\nfunction checkDiagnostics(program, stderr, reportDiagnostic) {\n  var numErrors = 0;\n  do {\n    let diagnosticPtr = assemblyscript.nextDiagnostic(program);\n    if (!diagnosticPtr) break;\n    __pin(diagnosticPtr);\n    if (stderr) {\n      stderr.write(\n        __getString(assemblyscript.formatDiagnostic(diagnosticPtr, stderr.isTTY, true)) +\n        EOL + EOL\n      );\n    }\n    if (reportDiagnostic) {\n      const diagnostic = __wrap(diagnosticPtr, assemblyscript.DiagnosticMessage);\n      const range = __wrap(diagnostic.range, assemblyscript.Range);\n      const relatedRange = __wrap(diagnostic.relatedRange, assemblyscript.Range);\n      const rangeSource = range ? __wrap(range.source, assemblyscript.Source) : null;\n      const relatedRangeSource = relatedRange ? __wrap(relatedRange.source, assemblyscript.Source) : null;\n\n      reportDiagnostic({\n        message: __getString(diagnostic.message),\n        code: diagnostic.code,\n        category: diagnostic.category,\n        range: range ? {\n          start: range.start,\n          end: range.end,\n          source: rangeSource ? {\n            normalizedPath: __getString(rangeSource.normalizedPath)\n          } : null,\n        } : null,\n        relatedRange: relatedRange ? {\n          start: relatedRange.start,\n          end: relatedRange.end,\n          source: relatedRangeSource ? {\n            normalizedPath: __getString(relatedRangeSource.normalizedPath)\n          } : null\n        } : null\n      });\n    }\n    if (assemblyscript.isError(diagnosticPtr)) ++numErrors;\n    __unpin(diagnosticPtr);\n  } while (true);\n  return numErrors;\n}\n\nexports.checkDiagnostics = checkDiagnostics;\n\n/** Creates an empty set of stats. */\nfunction createStats() {\n  return {\n    readTime: 0,\n    readCount: 0,\n    writeTime: 0,\n    writeCount: 0,\n    parseTime: 0,\n    parseCount: 0,\n    initializeTime: 0,\n    initializeCount: 0,\n    compileTime: 0,\n    compileCount: 0,\n    emitTime: 0,\n    emitCount: 0,\n    validateTime: 0,\n    validateCount: 0,\n    optimizeTime: 0,\n    optimizeCount: 0,\n    transformTime: 0,\n    transformCount: 0\n  };\n}\n\nexports.createStats = createStats;\n\n/** Measures the execution time of the specified function.  */\nfunction measure(fn) {\n  const start = process.hrtime();\n  fn();\n  const times = process.hrtime(start);\n  return times[0] * 1e9 + times[1];\n}\n\nexports.measure = measure;\n\nfunction pad(str, len) {\n  while (str.length < len) str = \" \" + str;\n  return str;\n}\n\n/** Formats a high resolution time to a human readable string. */\nfunction formatTime(time) {\n  return time ? (time / 1e6).toFixed(3) + \" ms\" : \"n/a\";\n}\n\nexports.formatTime = formatTime;\n\n/** Formats and prints out the contents of a set of stats. */\nfunction printStats(stats, output) {\n  const format = (time, count) => pad(formatTime(time), 12) + \"  n=\" + count;\n  (output || process.stdout).write([\n    \"I/O Read   : \" + format(stats.readTime, stats.readCount),\n    \"I/O Write  : \" + format(stats.writeTime, stats.writeCount),\n    \"Parse      : \" + format(stats.parseTime, stats.parseCount),\n    \"Initialize : \" + format(stats.initializeTime, stats.initializeCount),\n    \"Compile    : \" + format(stats.compileTime, stats.compileCount),\n    \"Emit       : \" + format(stats.emitTime, stats.emitCount),\n    \"Validate   : \" + format(stats.validateTime, stats.validateCount),\n    \"Optimize   : \" + format(stats.optimizeTime, stats.optimizeCount),\n    \"Transform  : \" + format(stats.transformTime, stats.transformCount),\n    \"\"\n  ].join(EOL) + EOL);\n}\n\nexports.printStats = printStats;\n\nvar allocBuffer = typeof global !== \"undefined\" && global.Buffer\n  ? global.Buffer.allocUnsafe || (len => new global.Buffer(len))\n  : len => new Uint8Array(len);\n\n/** Creates a memory stream that can be used in place of stdout/stderr. */\nfunction createMemoryStream(fn) {\n  var stream = [];\n  stream.write = function(chunk) {\n    if (fn) fn(chunk);\n    if (typeof chunk === \"string\") {\n      let buffer = allocBuffer(utf8.length(chunk));\n      utf8.write(chunk, buffer, 0);\n      chunk = buffer;\n    }\n    this.push(chunk);\n  };\n  stream.reset = function() {\n    stream.length = 0;\n  };\n  stream.toBuffer = function() {\n    var offset = 0, i = 0, k = this.length;\n    while (i < k) offset += this[i++].length;\n    var buffer = allocBuffer(offset);\n    offset = i = 0;\n    while (i < k) {\n      buffer.set(this[i], offset);\n      offset += this[i].length;\n      ++i;\n    }\n    return buffer;\n  };\n  stream.toString = function() {\n    var buffer = this.toBuffer();\n    return utf8.read(buffer, 0, buffer.length);\n  };\n  return stream;\n}\n\nexports.createMemoryStream = createMemoryStream;\n\n/** Compatible TypeScript compiler options for syntax highlighting etc. */\nexports.tscOptions = {\n  alwaysStrict: true,\n  noImplicitAny: true,\n  noImplicitReturns: true,\n  noImplicitThis: true,\n  noEmitOnError: true,\n  strictNullChecks: true,\n  experimentalDecorators: true,\n  target: \"esnext\",\n  module: \"commonjs\",\n  noLib: true,\n  types: [],\n  allowJs: false\n};\n","module.exports = {};\n","const process = require(\"process\"); // ensure shim\n\n// https://github.com/browserify/path-browserify v1.0.1\n//\n// Copyright (c) 2013 James Halliday\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + JSON.stringify(path));\n  }\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeStringPosix(path, allowAboveRoot) {\n  var res = '';\n  var lastSegmentLength = 0;\n  var lastSlash = -1;\n  var dots = 0;\n  var code;\n  for (var i = 0; i <= path.length; ++i) {\n    if (i < path.length)\n      code = path.charCodeAt(i);\n    else if (code === 47 /*/*/)\n      break;\n    else\n      code = 47 /*/*/;\n    if (code === 47 /*/*/) {\n      if (lastSlash === i - 1 || dots === 1) {\n        // NOOP\n      } else if (lastSlash !== i - 1 && dots === 2) {\n        if (res.length < 2 || lastSegmentLength !== 2 || res.charCodeAt(res.length - 1) !== 46 || res.charCodeAt(res.length - 2) !== 46) {\n          if (res.length > 2) {\n            var lastSlashIndex = res.lastIndexOf('/');\n            if (lastSlashIndex !== res.length - 1) {\n              if (lastSlashIndex === -1) {\n                res = '';\n                lastSegmentLength = 0;\n              } else {\n                res = res.slice(0, lastSlashIndex);\n                lastSegmentLength = res.length - 1 - res.lastIndexOf('/');\n              }\n              lastSlash = i;\n              dots = 0;\n              continue;\n            }\n          } else if (res.length === 2 || res.length === 1) {\n            res = '';\n            lastSegmentLength = 0;\n            lastSlash = i;\n            dots = 0;\n            continue;\n          }\n        }\n        if (allowAboveRoot) {\n          if (res.length > 0)\n            res += '/..';\n          else\n            res = '..';\n          lastSegmentLength = 2;\n        }\n      } else {\n        if (res.length > 0)\n          res += '/' + path.slice(lastSlash + 1, i);\n        else\n          res = path.slice(lastSlash + 1, i);\n        lastSegmentLength = i - lastSlash - 1;\n      }\n      lastSlash = i;\n      dots = 0;\n    } else if (code === 46 && dots !== -1) {\n      ++dots;\n    } else {\n      dots = -1;\n    }\n  }\n  return res;\n}\n\nfunction _format(sep, pathObject) {\n  var dir = pathObject.dir || pathObject.root;\n  var base = pathObject.base || (pathObject.name || '') + (pathObject.ext || '');\n  if (!dir) {\n    return base;\n  }\n  if (dir === pathObject.root) {\n    return dir + base;\n  }\n  return dir + sep + base;\n}\n\nvar posix = {\n  // path.resolve([from ...], to)\n  resolve: function resolve() {\n    var resolvedPath = '';\n    var resolvedAbsolute = false;\n    var cwd;\n\n    for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n      var path;\n      if (i >= 0)\n        path = arguments[i];\n      else {\n        if (cwd === undefined)\n          cwd = process.cwd();\n        path = cwd;\n      }\n\n      assertPath(path);\n\n      // Skip empty entries\n      if (path.length === 0) {\n        continue;\n      }\n\n      resolvedPath = path + '/' + resolvedPath;\n      resolvedAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    }\n\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n\n    // Normalize the path\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n\n    if (resolvedAbsolute) {\n      if (resolvedPath.length > 0)\n        return '/' + resolvedPath;\n      else\n        return '/';\n    } else if (resolvedPath.length > 0) {\n      return resolvedPath;\n    } else {\n      return '.';\n    }\n  },\n\n  normalize: function normalize(path) {\n    assertPath(path);\n\n    if (path.length === 0) return '.';\n\n    var isAbsolute = path.charCodeAt(0) === 47 /*/*/;\n    var trailingSeparator = path.charCodeAt(path.length - 1) === 47 /*/*/;\n\n    // Normalize the path\n    path = normalizeStringPosix(path, !isAbsolute);\n\n    if (path.length === 0 && !isAbsolute) path = '.';\n    if (path.length > 0 && trailingSeparator) path += '/';\n\n    if (isAbsolute) return '/' + path;\n    return path;\n  },\n\n  isAbsolute: function isAbsolute(path) {\n    assertPath(path);\n    return path.length > 0 && path.charCodeAt(0) === 47 /*/*/;\n  },\n\n  join: function join() {\n    if (arguments.length === 0)\n      return '.';\n    var joined;\n    for (var i = 0; i < arguments.length; ++i) {\n      var arg = arguments[i];\n      assertPath(arg);\n      if (arg.length > 0) {\n        if (joined === undefined)\n          joined = arg;\n        else\n          joined += '/' + arg;\n      }\n    }\n    if (joined === undefined)\n      return '.';\n    return posix.normalize(joined);\n  },\n\n  relative: function relative(from, to) {\n    assertPath(from);\n    assertPath(to);\n\n    if (from === to) return '';\n\n    from = posix.resolve(from);\n    to = posix.resolve(to);\n\n    if (from === to) return '';\n\n    if (from === \".\") return to; // FIX for 'odule.ts' (see issue #1398)\n\n    // Trim any leading backslashes\n    var fromStart = 1;\n    for (; fromStart < from.length; ++fromStart) {\n      if (from.charCodeAt(fromStart) !== 47 /*/*/)\n        break;\n    }\n    var fromEnd = from.length;\n    var fromLen = fromEnd - fromStart;\n\n    // Trim any leading backslashes\n    var toStart = 1;\n    for (; toStart < to.length; ++toStart) {\n      if (to.charCodeAt(toStart) !== 47 /*/*/)\n        break;\n    }\n    var toEnd = to.length;\n    var toLen = toEnd - toStart;\n\n    // Compare paths to find the longest common path from root\n    var length = fromLen < toLen ? fromLen : toLen;\n    var lastCommonSep = -1;\n    var i = 0;\n    for (; i <= length; ++i) {\n      if (i === length) {\n        if (toLen > length) {\n          if (to.charCodeAt(toStart + i) === 47 /*/*/) {\n            // We get here if `from` is the exact base path for `to`.\n            // For example: from='/foo/bar'; to='/foo/bar/baz'\n            return to.slice(toStart + i + 1);\n          } else if (i === 0) {\n            // We get here if `from` is the root\n            // For example: from='/'; to='/foo'\n            return to.slice(toStart + i);\n          }\n        } else if (fromLen > length) {\n          if (from.charCodeAt(fromStart + i) === 47 /*/*/) {\n            // We get here if `to` is the exact base path for `from`.\n            // For example: from='/foo/bar/baz'; to='/foo/bar'\n            lastCommonSep = i;\n          } else if (i === 0) {\n            // We get here if `to` is the root.\n            // For example: from='/foo'; to='/'\n            lastCommonSep = 0;\n          }\n        }\n        break;\n      }\n      var fromCode = from.charCodeAt(fromStart + i);\n      var toCode = to.charCodeAt(toStart + i);\n      if (fromCode !== toCode)\n        break;\n      else if (fromCode === 47 /*/*/)\n        lastCommonSep = i;\n    }\n\n    var out = '';\n    // Generate the relative path based on the path difference between `to`\n    // and `from`\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n      if (i === fromEnd || from.charCodeAt(i) === 47 /*/*/) {\n        if (out.length === 0)\n          out += '..';\n        else\n          out += '/..';\n      }\n    }\n\n    // Lastly, append the rest of the destination (`to`) path that comes after\n    // the common path parts\n    if (out.length > 0)\n      return out + to.slice(toStart + lastCommonSep);\n    else {\n      toStart += lastCommonSep;\n      if (to.charCodeAt(toStart) === 47 /*/*/)\n        ++toStart;\n      return to.slice(toStart);\n    }\n  },\n\n  _makeLong: function _makeLong(path) {\n    return path;\n  },\n\n  dirname: function dirname(path) {\n    assertPath(path);\n    if (path.length === 0) return '.';\n    var code = path.charCodeAt(0);\n    var hasRoot = code === 47 /*/*/;\n    var end = -1;\n    var matchedSlash = true;\n    for (var i = path.length - 1; i >= 1; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n        // We saw the first non-path separator\n        matchedSlash = false;\n      }\n    }\n\n    if (end === -1) return hasRoot ? '/' : '.';\n    if (hasRoot && end === 1) return '//';\n    return path.slice(0, end);\n  },\n\n  basename: function basename(path, ext) {\n    if (ext !== undefined && typeof ext !== 'string') throw new TypeError('\"ext\" argument must be a string');\n    assertPath(path);\n\n    var start = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i;\n\n    if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n      if (ext.length === path.length && ext === path) return '';\n      var extIdx = ext.length - 1;\n      var firstNonSlashEnd = -1;\n      for (i = path.length - 1; i >= 0; --i) {\n        var code = path.charCodeAt(i);\n        if (code === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else {\n          if (firstNonSlashEnd === -1) {\n            // We saw the first non-path separator, remember this index in case\n            // we need it if the extension ends up not matching\n            matchedSlash = false;\n            firstNonSlashEnd = i + 1;\n          }\n          if (extIdx >= 0) {\n            // Try to match the explicit extension\n            if (code === ext.charCodeAt(extIdx)) {\n              if (--extIdx === -1) {\n                // We matched the extension, so mark this as the end of our path\n                // component\n                end = i;\n              }\n            } else {\n              // Extension does not match, so our result is the entire path\n              // component\n              extIdx = -1;\n              end = firstNonSlashEnd;\n            }\n          }\n        }\n      }\n\n      if (start === end) end = firstNonSlashEnd;else if (end === -1) end = path.length;\n      return path.slice(start, end);\n    } else {\n      for (i = path.length - 1; i >= 0; --i) {\n        if (path.charCodeAt(i) === 47 /*/*/) {\n          // If we reached a path separator that was not part of a set of path\n          // separators at the end of the string, stop now\n          if (!matchedSlash) {\n            start = i + 1;\n            break;\n          }\n        } else if (end === -1) {\n          // We saw the first non-path separator, mark this as the end of our\n          // path component\n          matchedSlash = false;\n          end = i + 1;\n        }\n      }\n\n      if (end === -1) return '';\n      return path.slice(start, end);\n    }\n  },\n\n  extname: function extname(path) {\n    assertPath(path);\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n    for (var i = path.length - 1; i >= 0; --i) {\n      var code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n        // We saw a non-dot character immediately before the dot\n        preDotState === 0 ||\n        // The (right-most) trimmed path component is exactly '..'\n        preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      return '';\n    }\n    return path.slice(startDot, end);\n  },\n\n  format: function format(pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n      throw new TypeError('The \"pathObject\" argument must be of type Object. Received type ' + typeof pathObject);\n    }\n    return _format('/', pathObject);\n  },\n\n  parse: function parse(path) {\n    assertPath(path);\n\n    var ret = { root: '', dir: '', base: '', ext: '', name: '' };\n    if (path.length === 0) return ret;\n    var code = path.charCodeAt(0);\n    var isAbsolute = code === 47 /*/*/;\n    var start;\n    if (isAbsolute) {\n      ret.root = '/';\n      start = 1;\n    } else {\n      start = 0;\n    }\n    var startDot = -1;\n    var startPart = 0;\n    var end = -1;\n    var matchedSlash = true;\n    var i = path.length - 1;\n\n    // Track the state of characters (if any) we see before our first dot and\n    // after any path separator we find\n    var preDotState = 0;\n\n    // Get non-dir info\n    for (; i >= start; --i) {\n      code = path.charCodeAt(i);\n      if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n      if (end === -1) {\n        // We saw the first non-path separator, mark this as the end of our\n        // extension\n        matchedSlash = false;\n        end = i + 1;\n      }\n      if (code === 46) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1) startDot = i;else if (preDotState !== 1) preDotState = 1;\n      } else if (startDot !== -1) {\n        // We saw a non-dot and non-path separator before our dot, so we should\n        // have a good chance at having a non-empty extension\n        preDotState = -1;\n      }\n    }\n\n    if (startDot === -1 || end === -1 ||\n    // We saw a non-dot character immediately before the dot\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly '..'\n    preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n      if (end !== -1) {\n        if (startPart === 0 && isAbsolute) ret.base = ret.name = path.slice(1, end);else ret.base = ret.name = path.slice(startPart, end);\n      }\n    } else {\n      if (startPart === 0 && isAbsolute) {\n        ret.name = path.slice(1, startDot);\n        ret.base = path.slice(1, end);\n      } else {\n        ret.name = path.slice(startPart, startDot);\n        ret.base = path.slice(startPart, end);\n      }\n      ret.ext = path.slice(startDot, end);\n    }\n\n    if (startPart > 0) ret.dir = path.slice(0, startPart - 1);else if (isAbsolute) ret.dir = '/';\n\n    return ret;\n  },\n\n  sep: '/',\n  delimiter: ':',\n  win32: null,\n  posix: null\n};\n\nposix.posix = posix;\n\nmodule.exports = posix;\n","module.exports = {\n  platform: \"linux\",\n  cwd() {\n    return \".\";\n  },\n  umask() {\n    return 0;\n  },\n  hrtime,\n  argv: []\n};\n\n// https://github.com/kumavis/browser-process-hrtime v1.0.0\n//\n// Copyright 2014 kumavis\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n// 1. Redistributions of source code must retain the above copyright notice,\n// this list of conditions and the following disclaimer.\n//\n// 2. Redistributions in binary form must reproduce the above copyright notice,\n// this list of conditions and the following disclaimer in the documentation\n// and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nvar performance = global.performance || {};\nvar performanceNow =\n  performance.now        ||\n  performance.mozNow     ||\n  performance.msNow      ||\n  performance.oNow       ||\n  performance.webkitNow  ||\n  function(){ return (new Date()).getTime(); };\n\nfunction hrtime(previousTimestamp) {\n  var clocktime = performanceNow.call(performance);\n  var seconds = Math.floor(clocktime * 1e-3);\n  var nanoseconds = Math.floor(clocktime * 1e6 - seconds * 1e9);\n  if (previousTimestamp) {\n    seconds -= previousTimestamp[0];\n    nanoseconds -= previousTimestamp[1];\n    if (nanoseconds < 0) {\n      seconds--;\n      nanoseconds += 1e9;\n    }\n  }\n  return [ seconds, nanoseconds ];\n}\n","/**\n * @fileoverview Terminal colors utility.\n * @license Apache-2.0\n */\n\nvar proc = typeof process !== \"undefined\" && process || {};\nvar isCI = proc.env && \"CI\" in proc.env; // doesn't work when bundled because 'process' is a mock\n\nfunction from(stream, base) {\n  var colors = base || {};\n  colors.supported = (stream && !!stream.isTTY) || isCI;\n  colors.gray = text => colors.supported ? exports.GRAY + text + exports.RESET : text;\n  colors.red = text => colors.supported ? exports.RED + text + exports.RESET : text;\n  colors.green = text => colors.supported ? exports.GREEN + text + exports.RESET : text;\n  colors.yellow = text => colors.supported ? exports.YELLOW + text + exports.RESET : text;\n  colors.blue = text => colors.supported ? exports.BLUE + text + exports.RESET : text;\n  colors.magenta = text => colors.supported ? exports.MAGENTA + text + exports.RESET : text;\n  colors.cyan = text => colors.supported ? exports.CYAN + text + exports.RESET : text;\n  colors.white = text => colors.supported ? exports.WHITE + text + exports.RESET : text;\n  return colors;\n}\n\nexports.stdout = from(proc.stdout, exports);\nexports.stderr = from(proc.stderr);\nexports.from = from;\n\nexports.GRAY = \"\\u001b[90m\";\nexports.RED = \"\\u001b[91m\";\nexports.GREEN = \"\\u001b[92m\";\nexports.YELLOW = \"\\u001b[93m\";\nexports.BLUE = \"\\u001b[94m\";\nexports.MAGENTA = \"\\u001b[95m\";\nexports.CYAN = \"\\u001b[96m\";\nexports.WHITE = \"\\u001b[97m\";\nexports.RESET = \"\\u001b[0m\";\n","/**\n * @fileoverview File finding utility.\n * @license Apache-2.0\n */\n\nconst fs = require(\"fs\");\nconst path = require(\"path\");\n\nfunction findFiles(dirname, filter) {\n  var out = [];\n  fs.readdirSync(dirname).forEach(name => {\n    if (fs.statSync(path.join(dirname, name)).isDirectory()) {\n      findFiles(path.join(dirname, name), filter).forEach(iname => out.push(name + \"/\" + iname));\n    } else if (!filter || typeof filter === \"function\" ? filter(name) : filter.test(name)) {\n      out.push(name);\n    }\n  });\n  return out;\n}\n\nexports.files = findFiles;\n","/**\n * @fileoverview Recursive mkdir.\n * @license\n * Copyright 2010 James Halliday (mail@substack.net)\n *\n * This project is free software released under the MIT/X11 license:\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst path = require(\"path\");\nconst fs = require(\"fs\");\nconst process = require(\"process\"); // ensure shim\n\nmodule.exports = function mkdirp(p, opts, made) {\n  if (!opts || typeof opts !== \"object\") {\n    opts = { mode: opts };\n  }\n  var mode = opts.mode;\n  if (mode === undefined) {\n    mode = 0o777 & (~process.umask());\n  }\n  if (!made) made = null;\n  p = path.resolve(p);\n  try {\n    fs.mkdirSync(p, mode);\n    made = made || p;\n  } catch (err0) {\n    switch (err0.code) {\n      case \"ENOENT\":\n        made = mkdirp(path.dirname(p), opts, made);\n        mkdirp(p, opts, made);\n        break;\n      default:\n        var stat;\n        try {\n          stat = fs.statSync(p);\n        } catch (err1) {\n          throw err0;\n        }\n        if (!stat.isDirectory()) throw err0;\n        break;\n    }\n  }\n  return made;\n};\n","/**\n * @fileoverview Command line options utility.\n * @license Apache-2.0\n */\n\nconst path = require(\"path\");\nconst colorsUtil = require(\"./colors\");\n\n// type | meaning\n// -----|---------------\n// b    | boolean\n// i    | integer\n// f    | float\n// s    | string\n// I    | integer array\n// F    | float array\n// S    | string array\n\n/** Parses the specified command line arguments according to the given configuration. */\nfunction parse(argv, config, propagateDefaults = true) {\n  var options = {};\n  var unknown = [];\n  var args = [];\n  var trailing = [];\n\n  // make an alias map and initialize defaults\n  var aliases = {};\n  Object.keys(config).forEach(key => {\n    if (key.startsWith(\" \")) return;\n    var option = config[key];\n    if (option.alias != null) {\n      if (typeof option.alias === \"string\") aliases[option.alias] = key;\n      else if (Array.isArray(option.alias)) option.alias.forEach(alias => aliases[alias] = key);\n    }\n    if (propagateDefaults && option.default != null) options[key] = option.default;\n  });\n\n  // iterate over argv\n  for (var i = 0, k = (argv = argv.slice()).length; i < k; ++i) {\n    let arg = argv[i];\n    if (arg == \"--\") { ++i; break; }\n    let match = /^(?:(-\\w)(?:=(.*))?|(--\\w{2,})(?:=(.*))?)$/.exec(arg), option, key;\n    if (match) {\n      if (config[arg]) option = config[key = arg]; // exact\n      else if (match[1] != null) { // alias\n        option = config[key = aliases[match[1].substring(1)]];\n        if (option && match[2] != null) argv[i--] = match[2];\n      } else if (match[3] != null) { // full\n        option = config[key = match[3].substring(2)];\n        if (option && match[4] != null) argv[i--] = match[4];\n      }\n    } else {\n      if (arg.charCodeAt(0) == 45) option = config[key = arg]; // exact\n      else { args.push(arg); continue; } // argument\n    }\n    if (option) {\n      if (option.value) {\n        // alias setting fixed values\n        Object.keys(option.value).forEach(k => options[k] = option.value[k]);\n      } else if (option.type == null || option.type === \"b\") {\n        // boolean flag not taking a value\n        options[key] = true;\n      } else {\n        if (i + 1 < argv.length && argv[i + 1].charCodeAt(0) != 45) {\n          // non-boolean with given value\n          switch (option.type) {\n            case \"i\": options[key] = parseInt(argv[++i], 10); break;\n            case \"I\": options[key] = (options[key] || []).concat(parseInt(argv[++i], 10)); break;\n            case \"f\": options[key] = parseFloat(argv[++i]); break;\n            case \"F\": options[key] = (options[key] || []).concat(parseFloat(argv[++i])); break;\n            case \"s\": options[key] = String(argv[++i]); break;\n            case \"S\": options[key] = (options[key] || []).concat(argv[++i].split(\",\")); break;\n            default: unknown.push(arg); --i;\n          }\n        } else {\n          // non-boolean with omitted value\n          switch (option.type) {\n            case \"i\":\n            case \"f\": options[key] = option.default || 0; break;\n            case \"s\": options[key] = option.default || \"\"; break;\n            case \"I\":\n            case \"F\":\n            case \"S\": options[key] = option.default || []; break;\n            default: unknown.push(arg);\n          }\n        }\n      }\n    } else unknown.push(arg);\n  }\n  while (i < k) trailing.push(argv[i++]); // trailing\n  if (propagateDefaults) addDefaults(config, options);\n\n  return { options, unknown, arguments: args, trailing };\n}\n\nexports.parse = parse;\n\n/** Generates the help text for the specified configuration. */\nfunction help(config, options) {\n  if (!options) options = {};\n  var indent = options.indent || 2;\n  var padding = options.padding || 24;\n  var eol = options.eol || \"\\n\";\n  var sbCategories = {};\n  var sbOther = [];\n  Object.keys(config).forEach(key => {\n    var option = config[key];\n    if (option.description == null) return;\n    var text = \"\";\n    while (text.length < indent) text += \" \";\n    text += \"--\" + key;\n    if (option.alias) text += \", -\" + option.alias;\n    while (text.length < padding) text += \" \";\n    var sb;\n    if (!options.noCategories && option.category) {\n      if (!(sb = sbCategories[option.category])) {\n        sbCategories[option.category] = sb = [];\n      }\n    } else {\n      sb = sbOther;\n    }\n    if (Array.isArray(option.description)) {\n      sb.push(text + option.description[0] + option.description.slice(1).map(line => {\n        for (let i = 0; i < padding; ++i) line = \" \" + line;\n        return eol + line;\n      }).join(\"\"));\n    } else sb.push(text + option.description);\n  });\n  var sb = [];\n  var hasCategories = false;\n  Object.keys(sbCategories).forEach(category => {\n    hasCategories = true;\n    sb.push(eol + \" \" + colorsUtil.gray(category) + eol);\n    sb.push(sbCategories[category].join(eol));\n  });\n  if (hasCategories) {\n    sb.push(eol + \" \" + colorsUtil.gray(\"Other\") + eol);\n  }\n  sb.push(sbOther.join(eol));\n  return sb.join(eol);\n}\n\nexports.help = help;\n\n/** Sanitizes an option value to be a valid value of the option's type. */\nfunction sanitizeValue(value, type) {\n  if (value != null) {\n    switch (type) {\n      case undefined:\n      case \"b\": return Boolean(value);\n      case \"i\": return Math.trunc(value) || 0;\n      case \"f\": return Number(value) || 0;\n      case \"s\": {\n        if (value === true) return \"\";\n        return String(value);\n      }\n      case \"I\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(v => Math.trunc(v) || 0);\n      }\n      case \"F\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(v => Number(v) || 0);\n      }\n      case \"S\": {\n        if (!Array.isArray(value)) value = [ value ];\n        return value.map(String);\n      }\n    }\n  }\n  return undefined;\n}\n\n/** Merges two sets of options into one, preferring the current over the parent set. */\nfunction merge(config, currentOptions, parentOptions, parentBaseDir) {\n  const mergedOptions = {};\n  for (const [key, { type, mutuallyExclusive, isPath, useNodeResolution, cliOnly }] of Object.entries(config)) {\n    let currentValue = sanitizeValue(currentOptions[key], type);\n    let parentValue = sanitizeValue(parentOptions[key], type);\n    if (currentValue == null) {\n      if (parentValue != null) {\n        // only parent value present\n        if (cliOnly) continue;\n        if (Array.isArray(parentValue)) {\n          let exclude;\n          if (isPath) {\n            parentValue = parentValue.map(value => resolvePath(value, parentBaseDir, useNodeResolution));\n          }\n          if (mutuallyExclusive != null && (exclude = currentOptions[mutuallyExclusive])) {\n            mergedOptions[key] = parentValue.filter(value => !exclude.includes(value));\n          } else {\n            mergedOptions[key] = parentValue.slice();\n          }\n        } else {\n          if (isPath) {\n            parentValue = resolvePath(parentValue, parentBaseDir, useNodeResolution);\n          }\n          mergedOptions[key] = parentValue;\n        }\n      }\n    } else if (parentValue == null) {\n      // only current value present\n      if (Array.isArray(currentValue)) {\n        mergedOptions[key] = currentValue.slice();\n      } else {\n        mergedOptions[key] = currentValue;\n      }\n    } else {\n      // both current and parent values present\n      if (Array.isArray(currentValue)) {\n        if (cliOnly) {\n          mergedOptions[key] = currentValue.slice();\n          continue;\n        }\n        let exclude;\n        if (isPath) {\n          parentValue = parentValue.map(value => resolvePath(value, parentBaseDir, useNodeResolution));\n        }\n        if (mutuallyExclusive != null && (exclude = currentOptions[mutuallyExclusive])) {\n          mergedOptions[key] = [\n            ...currentValue,\n            ...parentValue.filter(value => !currentValue.includes(value) && !exclude.includes(value))\n          ];\n        } else {\n          mergedOptions[key] = [\n            ...currentValue,\n            ...parentValue.filter(value => !currentValue.includes(value)) // dedup\n          ];\n        }\n      } else {\n        mergedOptions[key] = currentValue;\n      }\n    }\n  }\n  return mergedOptions;\n}\n\nexports.merge = merge;\n\nconst dynrequire = typeof __webpack_require__ === \"function\"\n  ? __non_webpack_require__\n  : require;\n\n/** Resolves a single possibly relative path. Keeps absolute paths, otherwise prepends baseDir. */\nfunction resolvePath(p, baseDir, useNodeResolution = false) {\n  if (path.isAbsolute(p)) return p;\n  if (useNodeResolution && !p.startsWith(\".\")) {\n    return dynrequire.resolve(p, { paths: [ baseDir ] });\n  }\n  return path.join(baseDir, p);\n}\n\nexports.resolvePath = resolvePath;\n\n/** Populates default values on a parsed options result. */\nfunction addDefaults(config, options) {\n  for (const [key, { default: defaultValue }] of Object.entries(config)) {\n    if (options[key] == null && defaultValue != null) {\n      options[key] = defaultValue;\n    }\n  }\n}\n\nexports.addDefaults = addDefaults;\n","/**\n * @fileoverview UTF8 utility.\n * @license Apache-2.0\n */\n\n// @protobufjs/utf8\n\n/**\n * A minimal UTF8 implementation for number arrays.\n * @memberof util\n * @namespace\n */\nvar utf8 = exports;\n\n/**\n * Calculates the UTF8 byte length of a string.\n * @param {string} string String\n * @returns {number} Byte length\n */\nutf8.length = function utf8_length(string) {\n  var len = 0,\n      c = 0;\n  for (var i = 0, l = string.length; i < l; ++i) {\n    c = string.charCodeAt(i);\n    if (c < 128)\n      len += 1;\n    else if (c < 2048)\n      len += 2;\n    else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\n      ++i;\n      len += 4;\n    } else\n      len += 3;\n  }\n  return len;\n};\n\n/**\n * Reads UTF8 bytes as a string.\n * @param {Uint8Array} buffer Source buffer\n * @param {number} start Source start\n * @param {number} end Source end\n * @returns {string} String read\n */\nutf8.read = function utf8_read(buffer, start, end) {\n  var len = end - start;\n  if (len < 1)\n    return \"\";\n  var parts = null,\n      chunk = [],\n      i = 0, // char offset\n      t;     // temporary\n  while (start < end) {\n    t = buffer[start++];\n    if (t < 128)\n      chunk[i++] = t;\n    else if (t > 191 && t < 224)\n      chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\n    else if (t > 239 && t < 365) {\n      t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\n      chunk[i++] = 0xD800 + (t >> 10);\n      chunk[i++] = 0xDC00 + (t & 1023);\n    } else\n      chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\n    if (i > 8191) {\n      (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\n      i = 0;\n    }\n  }\n  if (parts) {\n    if (i)\n      parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\n    return parts.join(\"\");\n  }\n  return String.fromCharCode.apply(String, chunk.slice(0, i));\n};\n\n/**\n * Writes a string as UTF8 bytes.\n * @param {string} string Source string\n * @param {Uint8Array} buffer Destination buffer\n * @param {number} offset Destination offset\n * @returns {number} Bytes written\n */\nutf8.write = function utf8_write(string, buffer, offset) {\n  var start = offset,\n      c1, // character 1\n      c2; // character 2\n  for (var i = 0; i < string.length; ++i) {\n    c1 = string.charCodeAt(i);\n    if (c1 < 128) {\n      buffer[offset++] = c1;\n    } else if (c1 < 2048) {\n      buffer[offset++] = c1 >> 6 | 192;\n      buffer[offset++] = c1 & 63 | 128;\n    } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\n      c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\n      ++i;\n      buffer[offset++] = c1 >> 18 | 240;\n      buffer[offset++] = c1 >> 12 & 63 | 128;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    } else {\n      buffer[offset++] = c1 >> 12 | 224;\n      buffer[offset++] = c1 >> 6 & 63 | 128;\n      buffer[offset++] = c1 & 63 | 128;\n    }\n  }\n  return offset - start;\n};\n","// GENERATED FILE. DO NOT EDIT.\nvar loader = (function(exports) {\n  \"use strict\";\n  \n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.instantiate = instantiate;\n  exports.instantiateSync = instantiateSync;\n  exports.instantiateStreaming = instantiateStreaming;\n  exports.demangle = demangle;\n  exports.default = void 0;\n  // Runtime header offsets\n  const ID_OFFSET = -8;\n  const SIZE_OFFSET = -4; // Runtime ids\n  \n  const ARRAYBUFFER_ID = 0;\n  const STRING_ID = 1; // const ARRAYBUFFERVIEW_ID = 2;\n  // Runtime type information\n  \n  const ARRAYBUFFERVIEW = 1 << 0;\n  const ARRAY = 1 << 1;\n  const STATICARRAY = 1 << 2; // const SET = 1 << 3;\n  // const MAP = 1 << 4;\n  \n  const VAL_ALIGN_OFFSET = 6; // const VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\n  \n  const VAL_SIGNED = 1 << 11;\n  const VAL_FLOAT = 1 << 12; // const VAL_NULLABLE = 1 << 13;\n  \n  const VAL_MANAGED = 1 << 14; // const KEY_ALIGN_OFFSET = 15;\n  // const KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\n  // const KEY_SIGNED = 1 << 20;\n  // const KEY_FLOAT = 1 << 21;\n  // const KEY_NULLABLE = 1 << 22;\n  // const KEY_MANAGED = 1 << 23;\n  // Array(BufferView) layout\n  \n  const ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\n  const ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\n  const ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\n  const ARRAYBUFFERVIEW_SIZE = 12;\n  const ARRAY_LENGTH_OFFSET = 12;\n  const ARRAY_SIZE = 16;\n  const BIGINT = typeof BigUint64Array !== \"undefined\";\n  const THIS = Symbol();\n  const STRING_DECODE_THRESHOLD = 32;\n  const decoder = new TextDecoder(\"utf-16le\");\n  /** Gets a string from an U32 and an U16 view on a memory. */\n  \n  function getStringImpl(buffer, ptr) {\n    const len = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2] >>> 1;\n    const arr = new Uint16Array(buffer, ptr, len);\n  \n    if (len <= STRING_DECODE_THRESHOLD) {\n      return String.fromCharCode.apply(String, arr);\n    }\n  \n    return decoder.decode(arr);\n  }\n  /** Prepares the base module prior to instantiation. */\n  \n  \n  function preInstantiate(imports) {\n    const extendedExports = {};\n  \n    function getString(memory, ptr) {\n      if (!memory) return \"<yet unknown>\";\n      return getStringImpl(memory.buffer, ptr);\n    } // add common imports used by stdlib for convenience\n  \n  \n    const env = imports.env = imports.env || {};\n  \n    env.abort = env.abort || function abort(msg, file, line, colm) {\n      const memory = extendedExports.memory || env.memory; // prefer exported, otherwise try imported\n  \n      throw Error(`abort: ${getString(memory, msg)} at ${getString(memory, file)}:${line}:${colm}`);\n    };\n  \n    env.trace = env.trace || function trace(msg, n, ...args) {\n      const memory = extendedExports.memory || env.memory;\n      console.log(`trace: ${getString(memory, msg)}${n ? \" \" : \"\"}${args.slice(0, n).join(\", \")}`);\n    };\n  \n    env.seed = env.seed || Date.now;\n    imports.Math = imports.Math || Math;\n    imports.Date = imports.Date || Date;\n    return extendedExports;\n  }\n  \n  const E_NOEXPORTRUNTIME = \"Operation requires compiling with --exportRuntime\";\n  \n  const F_NOEXPORTRUNTIME = function () {\n    throw Error(E_NOEXPORTRUNTIME);\n  };\n  /** Prepares the final module once instantiation is complete. */\n  \n  \n  function postInstantiate(extendedExports, instance) {\n    const exports = instance.exports;\n    const memory = exports.memory;\n    const table = exports.table;\n  \n    const __new = exports.__new || F_NOEXPORTRUNTIME;\n  \n    const __pin = exports.__pin || F_NOEXPORTRUNTIME;\n  \n    const __unpin = exports.__unpin || F_NOEXPORTRUNTIME;\n  \n    const __collect = exports.__collect || F_NOEXPORTRUNTIME;\n  \n    const __rtti_base = exports.__rtti_base || ~0; // oob if not present\n  \n  \n    extendedExports.__new = __new;\n    extendedExports.__pin = __pin;\n    extendedExports.__unpin = __unpin;\n    extendedExports.__collect = __collect;\n    /** Gets the runtime type info for the given id. */\n  \n    function getInfo(id) {\n      const U32 = new Uint32Array(memory.buffer);\n      const count = U32[__rtti_base >>> 2];\n      if ((id >>>= 0) >= count) throw Error(`invalid id: ${id}`);\n      return U32[(__rtti_base + 4 >>> 2) + id * 2];\n    }\n    /** Gets and validate runtime type info for the given id for array like objects */\n  \n  \n    function getArrayInfo(id) {\n      const info = getInfo(id);\n      if (!(info & (ARRAYBUFFERVIEW | ARRAY | STATICARRAY))) throw Error(`not an array: ${id}, flags=${info}`);\n      return info;\n    }\n    /** Gets the runtime base id for the given id. */\n  \n  \n    function getBase(id) {\n      const U32 = new Uint32Array(memory.buffer);\n      const count = U32[__rtti_base >>> 2];\n      if ((id >>>= 0) >= count) throw Error(`invalid id: ${id}`);\n      return U32[(__rtti_base + 4 >>> 2) + id * 2 + 1];\n    }\n    /** Gets the runtime alignment of a collection's values. */\n  \n  \n    function getValueAlign(info) {\n      return 31 - Math.clz32(info >>> VAL_ALIGN_OFFSET & 31); // -1 if none\n    }\n    /** Gets the runtime alignment of a collection's keys. */\n    // function getKeyAlign(info) {\n    //   return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n    // }\n  \n    /** Allocates a new string in the module's memory and returns its pointer. */\n  \n  \n    function __newString(str) {\n      if (str == null) return 0;\n      const length = str.length;\n  \n      const ptr = __new(length << 1, STRING_ID);\n  \n      const U16 = new Uint16Array(memory.buffer);\n  \n      for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n  \n      return ptr;\n    }\n  \n    extendedExports.__newString = __newString;\n    /** Reads a string from the module's memory by its pointer. */\n  \n    function __getString(ptr) {\n      if (!ptr) return null;\n      const buffer = memory.buffer;\n      const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n      if (id !== STRING_ID) throw Error(`not a string: ${ptr}`);\n      return getStringImpl(buffer, ptr);\n    }\n  \n    extendedExports.__getString = __getString;\n    /** Gets the view matching the specified alignment, signedness and floatness. */\n  \n    function getView(alignLog2, signed, float) {\n      const buffer = memory.buffer;\n  \n      if (float) {\n        switch (alignLog2) {\n          case 2:\n            return new Float32Array(buffer);\n  \n          case 3:\n            return new Float64Array(buffer);\n        }\n      } else {\n        switch (alignLog2) {\n          case 0:\n            return new (signed ? Int8Array : Uint8Array)(buffer);\n  \n          case 1:\n            return new (signed ? Int16Array : Uint16Array)(buffer);\n  \n          case 2:\n            return new (signed ? Int32Array : Uint32Array)(buffer);\n  \n          case 3:\n            return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n        }\n      }\n  \n      throw Error(`unsupported align: ${alignLog2}`);\n    }\n    /** Allocates a new array in the module's memory and returns its pointer. */\n  \n  \n    function __newArray(id, values) {\n      const info = getArrayInfo(id);\n      const align = getValueAlign(info);\n      const length = values.length;\n  \n      const buf = __new(length << align, info & STATICARRAY ? id : ARRAYBUFFER_ID);\n  \n      let result;\n  \n      if (info & STATICARRAY) {\n        result = buf;\n      } else {\n        __pin(buf);\n  \n        const arr = __new(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n  \n        __unpin(buf);\n  \n        const U32 = new Uint32Array(memory.buffer);\n        U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = buf;\n        U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n        U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n        if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n        result = arr;\n      }\n  \n      const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n  \n      if (info & VAL_MANAGED) {\n        for (let i = 0; i < length; ++i) {\n          const value = values[i];\n          view[(buf >>> align) + i] = value;\n        }\n      } else {\n        view.set(values, buf >>> align);\n      }\n  \n      return result;\n    }\n  \n    extendedExports.__newArray = __newArray;\n    /** Gets a live view on an array's values in the module's memory. Infers the array type from RTTI. */\n  \n    function __getArrayView(arr) {\n      const U32 = new Uint32Array(memory.buffer);\n      const id = U32[arr + ID_OFFSET >>> 2];\n      const info = getArrayInfo(id);\n      const align = getValueAlign(info);\n      let buf = info & STATICARRAY ? arr : U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n      const length = info & ARRAY ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2] : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n      return getView(align, info & VAL_SIGNED, info & VAL_FLOAT).subarray(buf >>>= align, buf + length);\n    }\n  \n    extendedExports.__getArrayView = __getArrayView;\n    /** Copies an array's values from the module's memory. Infers the array type from RTTI. */\n  \n    function __getArray(arr) {\n      const input = __getArrayView(arr);\n  \n      const len = input.length;\n      const out = new Array(len);\n  \n      for (let i = 0; i < len; i++) out[i] = input[i];\n  \n      return out;\n    }\n  \n    extendedExports.__getArray = __getArray;\n    /** Copies an ArrayBuffer's value from the module's memory. */\n  \n    function __getArrayBuffer(ptr) {\n      const buffer = memory.buffer;\n      const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n      return buffer.slice(ptr, ptr + length);\n    }\n  \n    extendedExports.__getArrayBuffer = __getArrayBuffer;\n    /** Copies a typed array's values from the module's memory. */\n  \n    function getTypedArray(Type, alignLog2, ptr) {\n      return new Type(getTypedArrayView(Type, alignLog2, ptr));\n    }\n    /** Gets a live view on a typed array's values in the module's memory. */\n  \n  \n    function getTypedArrayView(Type, alignLog2, ptr) {\n      const buffer = memory.buffer;\n      const U32 = new Uint32Array(buffer);\n      const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n      return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n    }\n    /** Attach a set of get TypedArray and View functions to the exports. */\n  \n  \n    function attachTypedArrayFunctions(ctor, name, align) {\n      extendedExports[`__get${name}`] = getTypedArray.bind(null, ctor, align);\n      extendedExports[`__get${name}View`] = getTypedArrayView.bind(null, ctor, align);\n    }\n  \n    [Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array].forEach(ctor => {\n      attachTypedArrayFunctions(ctor, ctor.name, 31 - Math.clz32(ctor.BYTES_PER_ELEMENT));\n    });\n  \n    if (BIGINT) {\n      [BigUint64Array, BigInt64Array].forEach(ctor => {\n        attachTypedArrayFunctions(ctor, ctor.name.slice(3), 3);\n      });\n    }\n    /** Tests whether an object is an instance of the class represented by the specified base id. */\n  \n  \n    function __instanceof(ptr, baseId) {\n      const U32 = new Uint32Array(memory.buffer);\n      let id = U32[ptr + ID_OFFSET >>> 2];\n  \n      if (id <= U32[__rtti_base >>> 2]) {\n        do {\n          if (id == baseId) return true;\n          id = getBase(id);\n        } while (id);\n      }\n  \n      return false;\n    }\n  \n    extendedExports.__instanceof = __instanceof; // Pull basic exports to extendedExports so code in preInstantiate can use them\n  \n    extendedExports.memory = extendedExports.memory || memory;\n    extendedExports.table = extendedExports.table || table; // Demangle exports and provide the usual utility on the prototype\n  \n    return demangle(exports, extendedExports);\n  }\n  \n  function isResponse(src) {\n    return typeof Response !== \"undefined\" && src instanceof Response;\n  }\n  \n  function isModule(src) {\n    return src instanceof WebAssembly.Module;\n  }\n  /** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\n  \n  \n  async function instantiate(source, imports = {}) {\n    if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n    const module = isModule(source) ? source : await WebAssembly.compile(source);\n    const extended = preInstantiate(imports);\n    const instance = await WebAssembly.instantiate(module, imports);\n    const exports = postInstantiate(extended, instance);\n    return {\n      module,\n      instance,\n      exports\n    };\n  }\n  /** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\n  \n  \n  function instantiateSync(source, imports = {}) {\n    const module = isModule(source) ? source : new WebAssembly.Module(source);\n    const extended = preInstantiate(imports);\n    const instance = new WebAssembly.Instance(module, imports);\n    const exports = postInstantiate(extended, instance);\n    return {\n      module,\n      instance,\n      exports\n    };\n  }\n  /** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\n  \n  \n  async function instantiateStreaming(source, imports = {}) {\n    if (!WebAssembly.instantiateStreaming) {\n      return instantiate(isResponse(source = await source) ? source.arrayBuffer() : source, imports);\n    }\n  \n    const extended = preInstantiate(imports);\n    const result = await WebAssembly.instantiateStreaming(source, imports);\n    const exports = postInstantiate(extended, result.instance);\n    return { ...result,\n      exports\n    };\n  }\n  /** Demangles an AssemblyScript module's exports to a friendly object structure. */\n  \n  \n  function demangle(exports, extendedExports = {}) {\n    const setArgumentsLength = exports[\"__argumentsLength\"] ? length => {\n      exports[\"__argumentsLength\"].value = length;\n    } : exports[\"__setArgumentsLength\"] || exports[\"__setargc\"] || (() => {\n      /* nop */\n    });\n  \n    for (let internalName in exports) {\n      if (!Object.prototype.hasOwnProperty.call(exports, internalName)) continue;\n      const elem = exports[internalName];\n      let parts = internalName.split(\".\");\n      let curr = extendedExports;\n  \n      while (parts.length > 1) {\n        let part = parts.shift();\n        if (!Object.prototype.hasOwnProperty.call(curr, part)) curr[part] = {};\n        curr = curr[part];\n      }\n  \n      let name = parts[0];\n      let hash = name.indexOf(\"#\");\n  \n      if (hash >= 0) {\n        const className = name.substring(0, hash);\n        const classElem = curr[className];\n  \n        if (typeof classElem === \"undefined\" || !classElem.prototype) {\n          const ctor = function (...args) {\n            return ctor.wrap(ctor.prototype.constructor(0, ...args));\n          };\n  \n          ctor.prototype = {\n            valueOf() {\n              return this[THIS];\n            }\n  \n          };\n  \n          ctor.wrap = function (thisValue) {\n            return Object.create(ctor.prototype, {\n              [THIS]: {\n                value: thisValue,\n                writable: false\n              }\n            });\n          };\n  \n          if (classElem) Object.getOwnPropertyNames(classElem).forEach(name => Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name)));\n          curr[className] = ctor;\n        }\n  \n        name = name.substring(hash + 1);\n        curr = curr[className].prototype;\n  \n        if (/^(get|set):/.test(name)) {\n          if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n            let getter = exports[internalName.replace(\"set:\", \"get:\")];\n            let setter = exports[internalName.replace(\"get:\", \"set:\")];\n            Object.defineProperty(curr, name, {\n              get() {\n                return getter(this[THIS]);\n              },\n  \n              set(value) {\n                setter(this[THIS], value);\n              },\n  \n              enumerable: true\n            });\n          }\n        } else {\n          if (name === 'constructor') {\n            (curr[name] = (...args) => {\n              setArgumentsLength(args.length);\n              return elem(...args);\n            }).original = elem;\n          } else {\n            // instance method\n            (curr[name] = function (...args) {\n              // !\n              setArgumentsLength(args.length);\n              return elem(this[THIS], ...args);\n            }).original = elem;\n          }\n        }\n      } else {\n        if (/^(get|set):/.test(name)) {\n          if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n            Object.defineProperty(curr, name, {\n              get: exports[internalName.replace(\"set:\", \"get:\")],\n              set: exports[internalName.replace(\"get:\", \"set:\")],\n              enumerable: true\n            });\n          }\n        } else if (typeof elem === \"function\" && elem !== setArgumentsLength) {\n          (curr[name] = (...args) => {\n            setArgumentsLength(args.length);\n            return elem(...args);\n          }).original = elem;\n        } else {\n          curr[name] = elem;\n        }\n      }\n    }\n  \n    return extendedExports;\n  }\n  \n  var _default = {\n    instantiate,\n    instantiateSync,\n    instantiateStreaming,\n    demangle\n  };\n  exports.default = _default;\n  return exports;\n})({});\nif (typeof define === 'function' && define.amd) define([], function() { return loader; });\nelse if (typeof module === 'object' && typeof exports==='object') module.exports = loader;\n","// GENERATED FILE. DO NOT EDIT.\nvar rtrace = (function(exports) {\n  \"use strict\";\n  \n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = exports.Rtrace = exports.TOTAL_OVERHEAD = exports.OBJECT_OVERHEAD = exports.BLOCK_OVERHEAD = void 0;\n  // WebAssembly pages are 65536 kb\n  const PAGE_SIZE_BITS = 16;\n  const PAGE_SIZE = 1 << PAGE_SIZE_BITS;\n  const PAGE_MASK = PAGE_SIZE - 1; // Wasm32 pointer size is 4 bytes\n  \n  const PTR_SIZE_BITS = 2;\n  const PTR_SIZE = 1 << PTR_SIZE_BITS;\n  const PTR_MASK = PTR_SIZE - 1;\n  const PTR_VIEW = Uint32Array;\n  const BLOCK_OVERHEAD = PTR_SIZE;\n  exports.BLOCK_OVERHEAD = BLOCK_OVERHEAD;\n  const OBJECT_OVERHEAD = 16;\n  exports.OBJECT_OVERHEAD = OBJECT_OVERHEAD;\n  const TOTAL_OVERHEAD = BLOCK_OVERHEAD + OBJECT_OVERHEAD;\n  exports.TOTAL_OVERHEAD = TOTAL_OVERHEAD;\n  \n  function assert(x) {\n    if (!x) throw Error(\"assertion failed\");\n    return x;\n  }\n  \n  Error.stackTraceLimit = 15;\n  \n  function trimStacktrace(stack, levels) {\n    return stack.split(/\\r?\\n/).slice(1 + levels);\n  }\n  \n  const hrtime = typeof performance !== \"undefined\" && performance.now ? performance.now : typeof process !== \"undefined\" && process.hrtime ? () => {\n    let t = process.hrtime();\n    return t[0] * 1e3 + t[1] / 1e6;\n  } : Date.now;\n  const mmTagsToString = [\"\", \"FREE\", \"LEFTFREE\", \"FREE+LEFTFREE\"];\n  const gcColorToString = [\"BLACK/WHITE\", \"WHITE/BLACK\", \"GRAY\", \"INVALID\"];\n  \n  class Rtrace {\n    constructor(options) {\n      this.options = options || {};\n  \n      this.onerror = this.options.onerror || function () {\n        /* nop */\n      };\n  \n      this.oninfo = this.options.oninfo || function () {\n        /* nop */\n      };\n  \n      this.oncollect_ = this.options.oncollect || function () {\n        /* nop */\n      };\n  \n      this.memory = null;\n      this.shadow = null;\n      this.shadowStart = 0x100000000;\n      this.blocks = new Map();\n      this.allocSites = new Map();\n      this.freedBlocks = new Map();\n      this.gcProfileStart = 0;\n      this.gcProfile = [];\n      this.allocCount = 0;\n      this.resizeCount = 0;\n      this.moveCount = 0;\n      this.freeCount = 0;\n      this.heapBase = 0x100000000;\n    }\n  \n    install(imports) {\n      if (!imports) imports = {};\n      imports.rtrace = Object.assign(imports.rtrace || {}, {\n        oninit: this.oninit.bind(this),\n        onalloc: this.onalloc.bind(this),\n        onresize: this.onresize.bind(this),\n        onmove: this.onmove.bind(this),\n        onvisit: this.onvisit.bind(this),\n        onfree: this.onfree.bind(this),\n        oninterrupt: this.oninterrupt.bind(this),\n        onyield: this.onyield.bind(this),\n        oncollect: this.oncollect.bind(this),\n        onstore: this.onstore.bind(this),\n        onload: this.onload.bind(this)\n      });\n      return imports;\n    }\n    /** Synchronizes the shadow memory with the module's memory. */\n  \n  \n    syncShadow() {\n      if (!this.memory) {\n        this.memory = assert(this.options.getMemory());\n        this.shadow = new WebAssembly.Memory({\n          initial: (this.memory.buffer.byteLength + PAGE_MASK & ~PAGE_MASK) >>> PAGE_SIZE_BITS\n        });\n      } else {\n        var diff = this.memory.buffer.byteLength - this.shadow.buffer.byteLength;\n        if (diff > 0) this.shadow.grow(diff >>> 16);\n      }\n    }\n    /** Marks a block's presence in shadow memory. */\n  \n  \n    markShadow(info, oldSize = 0) {\n      assert(this.shadow && this.shadow.byteLength == this.memory.byteLength);\n      assert((info.size & PTR_MASK) == 0);\n  \n      if (info.ptr < this.shadowStart) {\n        this.shadowStart = info.ptr;\n      }\n  \n      var len = info.size >>> PTR_SIZE_BITS;\n      var view = new PTR_VIEW(this.shadow.buffer, info.ptr, len);\n      var errored = false;\n      var start = oldSize >>> PTR_SIZE_BITS;\n  \n      for (let i = 0; i < start; ++i) {\n        if (view[i] != info.ptr && !errored) {\n          this.onerror(Error(\"shadow region mismatch: \" + view[i] + \" != \" + info.ptr), info);\n          errored = true;\n        }\n      }\n  \n      errored = false;\n  \n      for (let i = start; i < len; ++i) {\n        if (view[i] != 0 && !errored) {\n          this.onerror(Error(\"shadow region already in use: \" + view[i] + \" != 0\"), info);\n          errored = true;\n        }\n  \n        view[i] = info.ptr;\n      }\n    }\n    /** Unmarks a block's presence in shadow memory. */\n  \n  \n    unmarkShadow(info, oldSize = info.size) {\n      assert(this.shadow && this.shadow.byteLength == this.memory.byteLength);\n      var len = oldSize >>> PTR_SIZE_BITS;\n      var view = new PTR_VIEW(this.shadow.buffer, info.ptr, len);\n      var errored = false;\n      var start = 0;\n  \n      if (oldSize != info.size) {\n        assert(oldSize > info.size);\n        start = info.size >>> PTR_SIZE_BITS;\n      }\n  \n      for (let i = 0; i < len; ++i) {\n        if (view[i] != info.ptr && !errored) {\n          this.onerror(Error(\"shadow region mismatch: \" + view[i] + \" != \" + info.ptr), info);\n          errored = true;\n        }\n  \n        if (i >= start) view[i] = 0;\n      }\n    }\n    /** Performs an access to shadow memory. */\n  \n  \n    accessShadow(ptr, size, isLoad, isRT) {\n      this.syncShadow();\n      if (ptr < this.shadowStart) return;\n      var value = new Uint32Array(this.shadow.buffer, ptr & ~PTR_MASK, 1)[0];\n      if (value != 0) return;\n  \n      if (!isRT) {\n        let stack = trimStacktrace(new Error().stack, 2);\n        this.onerror(new Error(\"OOB \" + (isLoad ? \"load\" : \"store\") + 8 * size + \" at address \" + ptr + \"\\n\" + stack.join(\"\\n\")));\n      }\n    }\n    /** Obtains information about a block. */\n  \n  \n    getBlockInfo(ptr) {\n      const [mmInfo, gcInfo, gcInfo2, rtId, rtSize] = new Uint32Array(this.memory.buffer, ptr, 5);\n      const size = mmInfo & ~3;\n      return {\n        ptr,\n        size: BLOCK_OVERHEAD + size,\n        // total incl. overhead\n        mmInfo: {\n          tags: mmTagsToString[mmInfo & 3],\n          size: size // as stored excl. overhead\n  \n        },\n        gcInfo: {\n          color: gcColorToString[gcInfo & 3],\n          next: gcInfo & ~3,\n          prev: gcInfo2\n        },\n        rtId,\n        rtSize\n      };\n    }\n    /** Checks if rtrace is active, i.e. at least one event has occurred. */\n  \n  \n    get active() {\n      return Boolean(this.allocCount || this.resizeCount || this.moveCount || this.freeCount);\n    }\n    /** Checks if there are any leaks and emits them via `oninfo`. Returns the number of live blocks. */\n  \n  \n    check() {\n      if (this.oninfo) {\n        for (let [ptr, info] of this.blocks) {\n          this.oninfo(\"LIVE \" + ptr + \"\\n\" + info.allocStack.join(\"\\n\"));\n        }\n      }\n  \n      return this.blocks.size;\n    } // Runtime instrumentation\n  \n  \n    oninit(heapBase) {\n      this.heapBase = heapBase;\n      this.gcProfileStart = 0;\n      this.gcProfile.length = 0;\n      this.oninfo(\"INIT heapBase=\" + heapBase);\n    }\n  \n    onalloc(ptr) {\n      this.syncShadow();\n      ++this.allocCount;\n      var info = this.getBlockInfo(ptr);\n  \n      if (this.blocks.has(ptr)) {\n        this.onerror(Error(\"duplicate alloc: \" + ptr), info);\n      } else {\n        this.oninfo(\"ALLOC \" + ptr + \"..\" + (ptr + info.size));\n        this.markShadow(info);\n        let allocStack = trimStacktrace(new Error().stack, 1); // strip onalloc\n  \n        this.blocks.set(ptr, Object.assign(info, {\n          allocStack\n        }));\n      }\n    }\n  \n    onresize(ptr, oldSize) {\n      this.syncShadow();\n      ++this.resizeCount;\n      const info = this.getBlockInfo(ptr);\n  \n      if (!this.blocks.has(ptr)) {\n        this.onerror(Error(\"orphaned resize: \" + ptr), info);\n      } else {\n        const beforeInfo = this.blocks.get(ptr);\n  \n        if (beforeInfo.size != oldSize) {\n          this.onerror(Error(`size mismatch upon resize: ${ptr} (${beforeInfo.size} != ${oldSize})`), info);\n        }\n  \n        const newSize = info.size;\n        this.oninfo(\"RESIZE \" + ptr + \"..\" + (ptr + newSize) + \" (\" + oldSize + \"->\" + newSize + \")\");\n        this.blocks.set(ptr, Object.assign(info, {\n          allocStack: beforeInfo.allocStack\n        }));\n  \n        if (newSize > oldSize) {\n          this.markShadow(info, oldSize);\n        } else if (newSize < oldSize) {\n          this.unmarkShadow(info, oldSize);\n        }\n      }\n    }\n  \n    onmove(oldPtr, newPtr) {\n      this.syncShadow();\n      ++this.moveCount;\n      var oldInfo = this.getBlockInfo(oldPtr);\n      var newInfo = this.getBlockInfo(newPtr);\n  \n      if (!this.blocks.has(oldPtr)) {\n        this.onerror(Error(\"orphaned move (old): \" + oldPtr), oldInfo);\n      } else {\n        if (!this.blocks.has(newPtr)) {\n          this.onerror(Error(\"orphaned move (new): \" + newPtr), newInfo);\n        } else {\n          const beforeInfo = this.blocks.get(oldPtr);\n          const oldSize = oldInfo.size;\n          const newSize = newInfo.size;\n  \n          if (beforeInfo.size != oldSize) {\n            this.onerror(Error(`size mismatch upon move: ${oldPtr} (${beforeInfo.size} != ${oldSize})`), oldInfo);\n          }\n  \n          this.oninfo(\"MOVE \" + oldPtr + \"..\" + (oldPtr + oldSize) + \" -> \" + newPtr + \"..\" + (newPtr + newSize)); // calls new alloc before and old free after\n        }\n      }\n    }\n  \n    onvisit(ptr) {\n      // Indicates that a block has been freed but it still visited by the GC\n      if (ptr > this.heapBase && !this.blocks.has(ptr)) {\n        let err = Error(\"orphaned visit: \" + ptr);\n        let info = this.freedBlocks.get(ptr);\n  \n        if (info) {\n          err.stack += \"\\n^ allocated at:\\n\" + info.allocStack.join(\"\\n\");\n          err.stack += \"\\n^ freed at:\\n\" + info.freeStack.join(\"\\n\");\n        }\n  \n        this.onerror(err, null);\n        return false;\n      }\n  \n      return true;\n    }\n  \n    onfree(ptr) {\n      this.syncShadow();\n      ++this.freeCount;\n      var info = this.getBlockInfo(ptr);\n  \n      if (!this.blocks.has(ptr)) {\n        this.onerror(Error(\"orphaned free: \" + ptr), info);\n      } else {\n        const oldInfo = this.blocks.get(ptr);\n  \n        if (info.size != oldInfo.size) {\n          this.onerror(Error(`size mismatch upon free: ${ptr} (${oldInfo.size} != ${info.size})`), info);\n        }\n  \n        this.oninfo(\"FREE \" + ptr + \"..\" + (ptr + info.size));\n        this.unmarkShadow(info);\n        const allocInfo = this.blocks.get(ptr);\n        this.blocks.delete(ptr);\n        const allocStack = allocInfo.allocStack;\n        const freeStack = trimStacktrace(new Error().stack, 1); // strip onfree\n        // (not much) TODO: Maintaining these is essentially a memory leak\n  \n        this.freedBlocks.set(ptr, {\n          allocStack,\n          freeStack\n        });\n      }\n    }\n  \n    oncollect(total) {\n      this.oninfo(`COLLECT at ${total}`);\n      this.plot(total);\n      this.oncollect_();\n    } // GC profiling\n  \n  \n    plot(total, pause = 0) {\n      if (!this.gcProfileStart) this.gcProfileStart = Date.now();\n      this.gcProfile.push([Date.now() - this.gcProfileStart, total, pause]);\n    }\n  \n    oninterrupt(total) {\n      this.interruptStart = hrtime();\n      this.plot(total);\n    }\n  \n    onyield(total) {\n      var pause = hrtime() - this.interruptStart;\n      if (pause >= 1) console.log(\"interrupted for \" + pause.toFixed(1) + \"ms\");\n      this.plot(total, pause);\n    } // Memory instrumentation\n  \n  \n    onstore(ptr, offset, bytes, isRT) {\n      this.accessShadow(ptr + offset, bytes, false, isRT);\n      return ptr;\n    }\n  \n    onload(ptr, offset, bytes, isRT) {\n      this.accessShadow(ptr + offset, bytes, true, isRT);\n      return ptr;\n    }\n  \n  }\n  \n  exports.Rtrace = Rtrace;\n  var _default = {\n    Rtrace\n  };\n  exports.default = _default;\n  return exports;\n})({});\nif (typeof define === 'function' && define.amd) define([], function() { return rtrace; });\nelse if (typeof module === 'object' && typeof exports==='object') module.exports = rtrace;\n","if(typeof __WEBPACK_EXTERNAL_MODULE__525__ === 'undefined') { var e = new Error(\"Cannot find module 'assemblyscript'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE__525__;","module.exports = __WEBPACK_EXTERNAL_MODULE__911__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(469);\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();"],"sourceRoot":""}